use crate :: { blocks :: { behaviour :: BlockBehaviourProperties , blocks :: Block , blocks :: BlockRegistry } , blocks :: properties :: BlockStateProperties , } ; use steel_utils :: ResourceLocation ; pub const AIR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("air") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_air (true) . replaceable (true) , & [] ,) ; pub const STONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GRANITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("granite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_GRANITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_granite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DIORITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diorite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_DIORITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_diorite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const ANDESITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("andesite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_ANDESITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_andesite") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GRASS_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("grass_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . is_randomly_ticking (true) . destroy_time (0.6f32) , & [& BlockStateProperties :: SNOWY] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SNOWY => BlockStateProperties :: SNOWY . index_of (false))) ; pub const DIRT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dirt") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const COARSE_DIRT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("coarse_dirt") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const PODZOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("podzol") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [& BlockStateProperties :: SNOWY] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SNOWY => BlockStateProperties :: SNOWY . index_of (false))) ; pub const COBBLESTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobblestone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const OAK_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const SPRUCE_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const BIRCH_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const JUNGLE_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const ACACIA_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const CHERRY_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const DARK_OAK_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const PALE_OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const PALE_OAK_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const MANGROVE_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const BAMBOO_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const BAMBOO_MOSAIC : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_mosaic") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const SPRUCE_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const BIRCH_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const JUNGLE_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const ACACIA_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const CHERRY_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const DARK_OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const PALE_OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STAGE => 0usize)) ; pub const MANGROVE_PROPAGULE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_propagule") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_4 , & BlockStateProperties :: HANGING , & BlockStateProperties :: STAGE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_4 => 0usize , BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: STAGE => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BEDROCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bedrock") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const WATER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("water") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (100f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (100f32) . liquid (true) . replaceable (true) , & [& BlockStateProperties :: LEVEL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL => 0usize)) ; pub const LAVA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lava") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (100f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (100f32) . liquid (true) . replaceable (true) , & [& BlockStateProperties :: LEVEL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL => 0usize)) ; pub const SAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sand") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const SUSPICIOUS_SAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("suspicious_sand") , BlockBehaviourProperties :: new () . explosion_resistance (0.25f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.25f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [& BlockStateProperties :: DUSTED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DUSTED => 0usize)) ; pub const RED_SAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_sand") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const GRAVEL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gravel") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const SUSPICIOUS_GRAVEL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("suspicious_gravel") , BlockBehaviourProperties :: new () . explosion_resistance (0.25f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.25f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [& BlockStateProperties :: DUSTED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DUSTED => 0usize)) ; pub const GOLD_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gold_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_GOLD_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_gold_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const IRON_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_IRON_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_iron_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const COAL_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("coal_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_COAL_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_coal_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const NETHER_GOLD_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_gold_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const SPRUCE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const BIRCH_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const JUNGLE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const ACACIA_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const CHERRY_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const DARK_OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const PALE_OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const MANGROVE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const MANGROVE_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_roots") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.7f32) . destroy_time (0.7f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MUDDY_MANGROVE_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("muddy_mangrove_roots") , BlockBehaviourProperties :: new () . explosion_resistance (0.7f32) . destroy_time (0.7f32) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const BAMBOO_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_block") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_SPRUCE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_spruce_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_BIRCH_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_birch_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_JUNGLE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_jungle_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_ACACIA_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_acacia_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_CHERRY_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_cherry_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_DARK_OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_dark_oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_PALE_OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_pale_oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_OAK_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_oak_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_MANGROVE_LOG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_mangrove_log") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_BAMBOO_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_bamboo_block") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const SPRUCE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const BIRCH_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const JUNGLE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const ACACIA_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const CHERRY_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const DARK_OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const MANGROVE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_SPRUCE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_spruce_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_BIRCH_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_birch_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_JUNGLE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_jungle_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_ACACIA_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_acacia_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_CHERRY_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_cherry_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_DARK_OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_dark_oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_PALE_OAK_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_pale_oak_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_MANGROVE_WOOD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_mangrove_wood") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const OAK_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const AZALEA_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("azalea_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const FLOWERING_AZALEA_LEAVES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("flowering_azalea_leaves") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: DISTANCE , & BlockStateProperties :: PERSISTENT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DISTANCE => 7usize , BlockStateProperties :: PERSISTENT => BlockStateProperties :: PERSISTENT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPONGE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sponge") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) , & [] ,) ; pub const WET_SPONGE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wet_sponge") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) , & [] ,) ; pub const GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const LAPIS_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lapis_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_LAPIS_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_lapis_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LAPIS_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lapis_block") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const DISPENSER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dispenser") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: TRIGGERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: TRIGGERED => BlockStateProperties :: TRIGGERED . index_of (false))) ; pub const SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CHISELED_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CUT_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const NOTE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("note_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: NOTEBLOCK_INSTRUMENT , & BlockStateProperties :: NOTE , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: NOTEBLOCK_INSTRUMENT => BlockStateProperties :: NOTEBLOCK_INSTRUMENT . get_internal_index_const (& crate :: blocks :: properties :: NoteBlockInstrument :: Harp) , BlockStateProperties :: NOTE => 0usize , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WHITE_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const ORANGE_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const MAGENTA_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const LIGHT_BLUE_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const YELLOW_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const LIME_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const PINK_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const GRAY_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const LIGHT_GRAY_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const CYAN_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const PURPLE_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const BLUE_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const BROWN_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const GREEN_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const RED_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const BLACK_BED : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_bed") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OCCUPIED , & BlockStateProperties :: BED_PART] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OCCUPIED => BlockStateProperties :: OCCUPIED . index_of (false) , BlockStateProperties :: BED_PART => BlockStateProperties :: BED_PART . get_internal_index_const (& crate :: blocks :: properties :: BedPart :: Foot))) ; pub const POWERED_RAIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("powered_rail") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.7f32) . destroy_time (0.7f32) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: RAIL_SHAPE_STRAIGHT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: RAIL_SHAPE_STRAIGHT => BlockStateProperties :: RAIL_SHAPE_STRAIGHT . get_internal_index_const (& crate :: blocks :: properties :: RailShape :: NorthSouth) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DETECTOR_RAIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("detector_rail") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.7f32) . destroy_time (0.7f32) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: RAIL_SHAPE_STRAIGHT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: RAIL_SHAPE_STRAIGHT => BlockStateProperties :: RAIL_SHAPE_STRAIGHT . get_internal_index_const (& crate :: blocks :: properties :: RailShape :: NorthSouth) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STICKY_PISTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sticky_piston") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (1.5f32) , & [& BlockStateProperties :: EXTENDED , & BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EXTENDED => BlockStateProperties :: EXTENDED . index_of (false) , BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const COBWEB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobweb") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (4f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (4f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const SHORT_GRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("short_grass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const FERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fern") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const DEAD_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_bush") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bush") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const SHORT_DRY_GRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("short_dry_grass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const TALL_DRY_GRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tall_dry_grass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [] ,) ; pub const SEAGRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("seagrass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const TALL_SEAGRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tall_seagrass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const PISTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("piston") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (1.5f32) , & [& BlockStateProperties :: EXTENDED , & BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EXTENDED => BlockStateProperties :: EXTENDED . index_of (false) , BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PISTON_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("piston_head") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (1.5f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: SHORT , & BlockStateProperties :: PISTON_TYPE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: SHORT => BlockStateProperties :: SHORT . index_of (false) , BlockStateProperties :: PISTON_TYPE => BlockStateProperties :: PISTON_TYPE . get_internal_index_const (& crate :: blocks :: properties :: PistonType :: Normal))) ; pub const WHITE_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const ORANGE_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const MAGENTA_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const LIGHT_BLUE_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const YELLOW_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const LIME_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const PINK_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const GRAY_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const LIGHT_GRAY_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const CYAN_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const PURPLE_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const BLUE_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const BROWN_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const GREEN_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const RED_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const BLACK_WOOL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_wool") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Guitar) , & [] ,) ; pub const MOVING_PISTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("moving_piston") , BlockBehaviourProperties :: new () . can_occlude (false) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . dynamic_shape (true) . destroy_time (- 1f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: PISTON_TYPE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: PISTON_TYPE => BlockStateProperties :: PISTON_TYPE . get_internal_index_const (& crate :: blocks :: properties :: PistonType :: Normal))) ; pub const DANDELION : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dandelion") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const TORCHFLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("torchflower") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POPPY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("poppy") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const BLUE_ORCHID : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_orchid") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const ALLIUM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("allium") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const AZURE_BLUET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("azure_bluet") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const RED_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_tulip") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const ORANGE_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_tulip") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const WHITE_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_tulip") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const PINK_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_tulip") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const OXEYE_DAISY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxeye_daisy") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const CORNFLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cornflower") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const WITHER_ROSE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wither_rose") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const LILY_OF_THE_VALLEY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lily_of_the_valley") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const BROWN_MUSHROOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_mushroom") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const RED_MUSHROOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_mushroom") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const GOLD_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gold_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bell) , & [] ,) ; pub const IRON_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: IronXylophone) , & [] ,) ; pub const BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TNT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tnt") , BlockBehaviourProperties :: new () . ignited_by_lava (true) , & [& BlockStateProperties :: UNSTABLE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: UNSTABLE => BlockStateProperties :: UNSTABLE . index_of (false))) ; pub const BOOKSHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bookshelf") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . destroy_time (1.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const CHISELED_BOOKSHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_bookshelf") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . destroy_time (1.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: SLOT_0_OCCUPIED , & BlockStateProperties :: SLOT_1_OCCUPIED , & BlockStateProperties :: SLOT_2_OCCUPIED , & BlockStateProperties :: SLOT_3_OCCUPIED , & BlockStateProperties :: SLOT_4_OCCUPIED , & BlockStateProperties :: SLOT_5_OCCUPIED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: SLOT_0_OCCUPIED => BlockStateProperties :: SLOT_0_OCCUPIED . index_of (false) , BlockStateProperties :: SLOT_1_OCCUPIED => BlockStateProperties :: SLOT_1_OCCUPIED . index_of (false) , BlockStateProperties :: SLOT_2_OCCUPIED => BlockStateProperties :: SLOT_2_OCCUPIED . index_of (false) , BlockStateProperties :: SLOT_3_OCCUPIED => BlockStateProperties :: SLOT_3_OCCUPIED . index_of (false) , BlockStateProperties :: SLOT_4_OCCUPIED => BlockStateProperties :: SLOT_4_OCCUPIED . index_of (false) , BlockStateProperties :: SLOT_5_OCCUPIED => BlockStateProperties :: SLOT_5_OCCUPIED . index_of (false))) ; pub const ACACIA_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_SHELF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_shelf") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: SIDE_CHAIN_PART , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SIDE_CHAIN_PART => BlockStateProperties :: SIDE_CHAIN_PART . get_internal_index_const (& crate :: blocks :: properties :: SideChainPart :: Unconnected) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MOSSY_COBBLESTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_cobblestone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const OBSIDIAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("obsidian") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (50f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const WALL_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wall_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const FIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fire") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [& BlockStateProperties :: AGE_15 , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_15 => 0usize , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const SOUL_FIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_fire") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const SPAWNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spawner") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (5f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CREAKING_HEART : & Block = & Block :: new (ResourceLocation :: vanilla_static ("creaking_heart") , BlockBehaviourProperties :: new () . explosion_resistance (10f32) . destroy_time (10f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: CREAKING_HEART_STATE , & BlockStateProperties :: NATURAL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: CREAKING_HEART_STATE => BlockStateProperties :: CREAKING_HEART_STATE . get_internal_index_const (& crate :: blocks :: properties :: CreakingHeartState :: Uprooted) , BlockStateProperties :: NATURAL => BlockStateProperties :: NATURAL . index_of (false))) ; pub const OAK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chest") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const REDSTONE_WIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_wire") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: EAST_REDSTONE , & BlockStateProperties :: NORTH_REDSTONE , & BlockStateProperties :: POWER , & BlockStateProperties :: SOUTH_REDSTONE , & BlockStateProperties :: WEST_REDSTONE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_REDSTONE => BlockStateProperties :: EAST_REDSTONE . get_internal_index_const (& crate :: blocks :: properties :: RedstoneSide :: None) , BlockStateProperties :: NORTH_REDSTONE => BlockStateProperties :: NORTH_REDSTONE . get_internal_index_const (& crate :: blocks :: properties :: RedstoneSide :: None) , BlockStateProperties :: POWER => 0usize , BlockStateProperties :: SOUTH_REDSTONE => BlockStateProperties :: SOUTH_REDSTONE . get_internal_index_const (& crate :: blocks :: properties :: RedstoneSide :: None) , BlockStateProperties :: WEST_REDSTONE => BlockStateProperties :: WEST_REDSTONE . get_internal_index_const (& crate :: blocks :: properties :: RedstoneSide :: None))) ; pub const DIAMOND_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diamond_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_DIAMOND_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_diamond_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DIAMOND_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diamond_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const CRAFTING_TABLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crafting_table") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const WHEAT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wheat") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_7] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_7 => 0usize)) ; pub const FARMLAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("farmland") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . is_randomly_ticking (true) . destroy_time (0.6f32) , & [& BlockStateProperties :: MOISTURE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: MOISTURE => 0usize)) ; pub const FURNACE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("furnace") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const OAK_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const LADDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("ladder") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.4f32) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.4f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RAIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("rail") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.7f32) . destroy_time (0.7f32) , & [& BlockStateProperties :: RAIL_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: RAIL_SHAPE => BlockStateProperties :: RAIL_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: RailShape :: NorthSouth) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COBBLESTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobblestone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_WALL_HANGING_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_wall_hanging_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LEVER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lever") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const STONE_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const IRON_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (5f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const OAK_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SPRUCE_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BIRCH_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const JUNGLE_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ACACIA_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CHERRY_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DARK_OAK_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PALE_OAK_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const MANGROVE_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BAMBOO_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const REDSTONE_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . is_randomly_ticking (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const DEEPSLATE_REDSTONE_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_redstone_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . is_randomly_ticking (true) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const REDSTONE_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (true))) ; pub const REDSTONE_WALL_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_wall_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (true))) ; pub const STONE_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SNOW : & Block = & Block :: new (ResourceLocation :: vanilla_static ("snow") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . is_randomly_ticking (true) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) . requires_correct_tool_for_drops (true) . replaceable (true) , & [& BlockStateProperties :: LAYERS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LAYERS => 1usize)) ; pub const ICE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("ice") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.5f32) . is_randomly_ticking (true) . friction (0.98f32) . destroy_time (0.5f32) , & [] ,) ; pub const SNOW_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("snow_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const CACTUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cactus") , BlockBehaviourProperties :: new () . explosion_resistance (0.4f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.4f32) , & [& BlockStateProperties :: AGE_15] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_15 => 0usize)) ; pub const CACTUS_FLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cactus_flower") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [] ,) ; pub const CLAY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("clay") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Flute) , & [] ,) ; pub const SUGAR_CANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sugar_cane") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_15] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_15 => 0usize)) ; pub const JUKEBOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jukebox") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HAS_RECORD] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HAS_RECORD => BlockStateProperties :: HAS_RECORD . index_of (false))) ; pub const OAK_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const NETHERRACK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("netherrack") , BlockBehaviourProperties :: new () . explosion_resistance (0.4f32) . destroy_time (0.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const SOUL_SAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_sand") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . speed_factor (0.4f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: CowBell) , & [] ,) ; pub const SOUL_SOIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_soil") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const BASALT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("basalt") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const POLISHED_BASALT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_basalt") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const SOUL_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const SOUL_WALL_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_wall_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const COPPER_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const COPPER_WALL_TORCH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_wall_torch") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const GLOWSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("glowstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Pling) , & [] ,) ; pub const NETHER_PORTAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_portal") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (- 1f32) , & [& BlockStateProperties :: HORIZONTAL_AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_AXIS => BlockStateProperties :: HORIZONTAL_AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: X))) ; pub const CARVED_PUMPKIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("carved_pumpkin") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const JACK_O_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jack_o_lantern") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: BITES] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BITES => 0usize)) ; pub const REPEATER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("repeater") , BlockBehaviourProperties :: new () . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: DELAY , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LOCKED , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DELAY => 1usize , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LOCKED => BlockStateProperties :: LOCKED . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WHITE_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const ORANGE_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const MAGENTA_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const LIGHT_BLUE_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const YELLOW_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const LIME_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const PINK_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const GRAY_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const LIGHT_GRAY_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const CYAN_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const PURPLE_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const BLUE_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const BROWN_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const GREEN_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const RED_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const BLACK_STAINED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_stained_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const OAK_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const MOSSY_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRACKED_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cracked_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CHISELED_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PACKED_MUD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("packed_mud") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (1f32) , & [] ,) ; pub const MUD_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mud_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const INFESTED_STONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_stone") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) , & [] ,) ; pub const INFESTED_COBBLESTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_cobblestone") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (1f32) , & [] ,) ; pub const INFESTED_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) , & [] ,) ; pub const INFESTED_MOSSY_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_mossy_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) , & [] ,) ; pub const INFESTED_CRACKED_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_cracked_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) , & [] ,) ; pub const INFESTED_CHISELED_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_chiseled_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) , & [] ,) ; pub const BROWN_MUSHROOM_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_mushroom_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (true) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (true) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (true) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (true) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (true))) ; pub const RED_MUSHROOM_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_mushroom_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (true) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (true) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (true) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (true) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (true))) ; pub const MUSHROOM_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mushroom_stem") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (true) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (true) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (true) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (true) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (true))) ; pub const IRON_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const EXPOSED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WEATHERED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const OXIDIZED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WAXED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_BARS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_bars") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const IRON_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_CHAIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_chain") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: AXIS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const PUMPKIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pumpkin") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Didgeridoo) , & [] ,) ; pub const MELON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("melon") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [] ,) ; pub const ATTACHED_PUMPKIN_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("attached_pumpkin_stem") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const ATTACHED_MELON_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("attached_melon_stem") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PUMPKIN_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pumpkin_stem") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_7] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_7 => 0usize)) ; pub const MELON_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("melon_stem") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_7] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_7 => 0usize)) ; pub const VINE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("vine") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.2f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const GLOW_LICHEN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("glow_lichen") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.2f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (false) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const RESIN_CLUMP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_clump") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (false) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const OAK_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STONE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MUD_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mud_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MYCELIUM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mycelium") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . is_randomly_ticking (true) . destroy_time (0.6f32) , & [& BlockStateProperties :: SNOWY] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SNOWY => BlockStateProperties :: SNOWY . index_of (false))) ; pub const LILY_PAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lily_pad") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const RESIN_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_block") , BlockBehaviourProperties :: new () . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RESIN_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RESIN_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RESIN_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RESIN_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("resin_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const CHISELED_RESIN_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_resin_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const NETHER_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const NETHER_BRICK_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_brick_fence") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const NETHER_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const NETHER_WART : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_wart") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_3] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_3 => 0usize)) ; pub const ENCHANTING_TABLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("enchanting_table") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BREWING_STAND : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brewing_stand") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [& BlockStateProperties :: HAS_BOTTLE_0 , & BlockStateProperties :: HAS_BOTTLE_1 , & BlockStateProperties :: HAS_BOTTLE_2] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HAS_BOTTLE_0 => BlockStateProperties :: HAS_BOTTLE_0 . index_of (false) , BlockStateProperties :: HAS_BOTTLE_1 => BlockStateProperties :: HAS_BOTTLE_1 . index_of (false) , BlockStateProperties :: HAS_BOTTLE_2 => BlockStateProperties :: HAS_BOTTLE_2 . index_of (false))) ; pub const CAULDRON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cauldron") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WATER_CAULDRON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("water_cauldron") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LEVEL_CAULDRON] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL_CAULDRON => 1usize)) ; pub const LAVA_CAULDRON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lava_cauldron") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const POWDER_SNOW_CAULDRON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("powder_snow_cauldron") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LEVEL_CAULDRON] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL_CAULDRON => 1usize)) ; pub const END_PORTAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_portal") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (3600000f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (- 1f32) , & [] ,) ; pub const END_PORTAL_FRAME : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_portal_frame") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EYE , & BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EYE => BlockStateProperties :: EYE . index_of (false) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const END_STONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_stone") , BlockBehaviourProperties :: new () . explosion_resistance (9f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DRAGON_EGG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dragon_egg") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (9f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [] ,) ; pub const REDSTONE_LAMP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_lamp") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const COCOA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cocoa") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) , & [& BlockStateProperties :: AGE_2 , & BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_2 => 0usize , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const SANDSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sandstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EMERALD_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("emerald_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_EMERALD_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_emerald_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const ENDER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("ender_chest") , BlockBehaviourProperties :: new () . explosion_resistance (600f32) . destroy_time (22.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TRIPWIRE_HOOK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tripwire_hook") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const TRIPWIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tripwire") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: ATTACHED , & BlockStateProperties :: DISARMED , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: POWERED , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACHED => BlockStateProperties :: ATTACHED . index_of (false) , BlockStateProperties :: DISARMED => BlockStateProperties :: DISARMED . index_of (false) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const EMERALD_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("emerald_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bit) , & [] ,) ; pub const SPRUCE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COMMAND_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("command_block") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: CONDITIONAL , & BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CONDITIONAL => BlockStateProperties :: CONDITIONAL . index_of (false) , BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BEACON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("beacon") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const COBBLESTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobblestone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const MOSSY_COBBLESTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_cobblestone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const FLOWER_POT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("flower_pot") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_TORCHFLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_torchflower") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_oak_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_SPRUCE_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_spruce_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_BIRCH_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_birch_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_JUNGLE_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_jungle_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_ACACIA_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_acacia_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_CHERRY_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_cherry_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_DARK_OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_dark_oak_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_PALE_OAK_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_pale_oak_sapling") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_MANGROVE_PROPAGULE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_mangrove_propagule") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_FERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_fern") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_DANDELION : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_dandelion") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_POPPY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_poppy") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_BLUE_ORCHID : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_blue_orchid") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_ALLIUM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_allium") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_AZURE_BLUET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_azure_bluet") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_RED_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_red_tulip") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_ORANGE_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_orange_tulip") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_WHITE_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_white_tulip") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_PINK_TULIP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_pink_tulip") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_OXEYE_DAISY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_oxeye_daisy") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_CORNFLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_cornflower") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_LILY_OF_THE_VALLEY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_lily_of_the_valley") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_WITHER_ROSE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_wither_rose") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_RED_MUSHROOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_red_mushroom") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_BROWN_MUSHROOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_brown_mushroom") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_DEAD_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_dead_bush") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_CACTUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_cactus") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const CARROTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("carrots") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_7] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_7 => 0usize)) ; pub const POTATOES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potatoes") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_7] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_7 => 0usize)) ; pub const OAK_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SPRUCE_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BIRCH_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const JUNGLE_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ACACIA_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CHERRY_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DARK_OAK_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PALE_OAK_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const MANGROVE_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BAMBOO_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SKELETON_SKULL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("skeleton_skull") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Skeleton) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const SKELETON_WALL_SKULL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("skeleton_wall_skull") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WITHER_SKELETON_SKULL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wither_skeleton_skull") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: WitherSkeleton) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const WITHER_SKELETON_WALL_SKULL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wither_skeleton_wall_skull") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ZOMBIE_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("zombie_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Zombie) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const ZOMBIE_WALL_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("zombie_wall_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PLAYER_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("player_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: CustomHead) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const PLAYER_WALL_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("player_wall_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CREEPER_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("creeper_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Creeper) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const CREEPER_WALL_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("creeper_wall_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DRAGON_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dragon_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Dragon) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const DRAGON_WALL_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dragon_wall_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PIGLIN_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("piglin_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Piglin) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const PIGLIN_WALL_HEAD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("piglin_wall_head") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ANVIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("anvil") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const CHIPPED_ANVIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chipped_anvil") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const DAMAGED_ANVIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("damaged_anvil") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const TRAPPED_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("trapped_chest") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIGHT_WEIGHTED_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_weighted_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: POWER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWER => 0usize)) ; pub const HEAVY_WEIGHTED_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("heavy_weighted_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: POWER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWER => 0usize)) ; pub const COMPARATOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("comparator") , BlockBehaviourProperties :: new () . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: MODE_COMPARATOR , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: MODE_COMPARATOR => BlockStateProperties :: MODE_COMPARATOR . get_internal_index_const (& crate :: blocks :: properties :: ComparatorMode :: Compare) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DAYLIGHT_DETECTOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("daylight_detector") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: INVERTED , & BlockStateProperties :: POWER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: INVERTED => BlockStateProperties :: INVERTED . index_of (false) , BlockStateProperties :: POWER => 0usize)) ; pub const REDSTONE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("redstone_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const NETHER_QUARTZ_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_quartz_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const HOPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("hopper") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (4.8f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: ENABLED , & BlockStateProperties :: FACING_HOPPER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ENABLED => BlockStateProperties :: ENABLED . index_of (true) , BlockStateProperties :: FACING_HOPPER => BlockStateProperties :: FACING_HOPPER . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Down))) ; pub const QUARTZ_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("quartz_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CHISELED_QUARTZ_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_quartz_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const QUARTZ_PILLAR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("quartz_pillar") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const QUARTZ_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("quartz_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACTIVATOR_RAIL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("activator_rail") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.7f32) . destroy_time (0.7f32) , & [& BlockStateProperties :: POWERED , & BlockStateProperties :: RAIL_SHAPE_STRAIGHT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: RAIL_SHAPE_STRAIGHT => BlockStateProperties :: RAIL_SHAPE_STRAIGHT . get_internal_index_const (& crate :: blocks :: properties :: RailShape :: NorthSouth) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DROPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dropper") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: TRIGGERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: TRIGGERED => BlockStateProperties :: TRIGGERED . index_of (false))) ; pub const WHITE_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const ORANGE_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const MAGENTA_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIGHT_BLUE_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const YELLOW_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIME_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PINK_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GRAY_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIGHT_GRAY_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CYAN_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PURPLE_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BLUE_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BROWN_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GREEN_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BLACK_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const WHITE_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const ORANGE_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const MAGENTA_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const LIGHT_BLUE_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const YELLOW_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const LIME_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const PINK_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const GRAY_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const LIGHT_GRAY_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const CYAN_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const PURPLE_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const BLUE_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const BROWN_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const GREEN_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const RED_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const BLACK_STAINED_GLASS_PANE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_stained_glass_pane") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const ACACIA_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_MOSAIC_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_mosaic_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SLIME_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("slime_block") , BlockBehaviourProperties :: new () . can_occlude (false) . friction (0.8f32) , & [] ,) ; pub const BARRIER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("barrier") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3600000.8f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (- 1f32) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIGHT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3600000.8f32) . destroy_time (- 1f32) . replaceable (true) , & [& BlockStateProperties :: LEVEL , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL => 15usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const IRON_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("iron_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (5f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PRISMARINE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PRISMARINE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DARK_PRISMARINE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_prismarine") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PRISMARINE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PRISMARINE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_PRISMARINE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_prismarine_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PRISMARINE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PRISMARINE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_PRISMARINE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_prismarine_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SEA_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sea_lantern") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const HAY_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("hay_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Banjo) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const WHITE_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const ORANGE_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const MAGENTA_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const LIGHT_BLUE_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const YELLOW_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const LIME_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const PINK_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const GRAY_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const LIGHT_GRAY_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const CYAN_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const PURPLE_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const BLUE_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const BROWN_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const GREEN_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const RED_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const BLACK_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const COAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("coal_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PACKED_ICE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("packed_ice") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . friction (0.98f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Chime) , & [] ,) ; pub const SUNFLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sunflower") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const LILAC : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lilac") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const ROSE_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("rose_bush") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const PEONY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("peony") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const TALL_GRASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tall_grass") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const LARGE_FERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("large_fern") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const WHITE_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const ORANGE_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const MAGENTA_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const LIGHT_BLUE_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const YELLOW_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const LIME_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const PINK_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const GRAY_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const LIGHT_GRAY_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const CYAN_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const PURPLE_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const BLUE_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const BROWN_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const GREEN_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const RED_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const BLACK_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize)) ; pub const WHITE_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const ORANGE_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const MAGENTA_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIGHT_BLUE_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const YELLOW_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIME_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PINK_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const GRAY_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIGHT_GRAY_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const CYAN_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PURPLE_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BLUE_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BROWN_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const GREEN_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const RED_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BLACK_WALL_BANNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_wall_banner") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const RED_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CHISELED_RED_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_red_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CUT_RED_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_red_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RED_SANDSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_sandstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OAK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oak_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SPRUCE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIRCH_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const JUNGLE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ACACIA_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CHERRY_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DARK_OAK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_OAK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MANGROVE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BAMBOO_MOSAIC_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_mosaic_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_STONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_stone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CUT_SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PETRIFIED_OAK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("petrified_oak_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COBBLESTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobblestone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STONE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MUD_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mud_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const NETHER_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const QUARTZ_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("quartz_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RED_SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CUT_RED_SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_red_sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PURPUR_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purpur_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_STONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_stone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const SMOOTH_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const SMOOTH_QUARTZ : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_quartz") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const SMOOTH_RED_SANDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_red_sandstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const SPRUCE_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BIRCH_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const JUNGLE_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ACACIA_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CHERRY_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DARK_OAK_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PALE_OAK_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const MANGROVE_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BAMBOO_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SPRUCE_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const BIRCH_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const JUNGLE_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const ACACIA_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const CHERRY_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const DARK_OAK_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const PALE_OAK_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const MANGROVE_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const BAMBOO_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const SPRUCE_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spruce_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BIRCH_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("birch_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const JUNGLE_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jungle_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const ACACIA_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("acacia_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CHERRY_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cherry_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const DARK_OAK_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dark_oak_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const PALE_OAK_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_oak_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const MANGROVE_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mangrove_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const BAMBOO_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const END_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . force_solid_off (true) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const CHORUS_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chorus_plant") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.4f32) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.4f32) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (false) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const CHORUS_FLOWER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chorus_flower") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.4f32) . is_randomly_ticking (true) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.4f32) , & [& BlockStateProperties :: AGE_5] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_5 => 0usize)) ; pub const PURPUR_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purpur_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PURPUR_PILLAR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purpur_pillar") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const PURPUR_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purpur_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const END_STONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_stone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (9f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TORCHFLOWER_CROP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("torchflower_crop") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_1] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_1 => 0usize)) ; pub const PITCHER_CROP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pitcher_crop") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_4 , & BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_4 => 0usize , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const PITCHER_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pitcher_plant") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: DOUBLE_BLOCK_HALF] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower))) ; pub const BEETROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("beetroots") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_3] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_3 => 0usize)) ; pub const DIRT_PATH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dirt_path") , BlockBehaviourProperties :: new () . explosion_resistance (0.65f32) . destroy_time (0.65f32) , & [] ,) ; pub const END_GATEWAY : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_gateway") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (3600000f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (- 1f32) , & [] ,) ; pub const REPEATING_COMMAND_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("repeating_command_block") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: CONDITIONAL , & BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CONDITIONAL => BlockStateProperties :: CONDITIONAL . index_of (false) , BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const CHAIN_COMMAND_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chain_command_block") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: CONDITIONAL , & BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CONDITIONAL => BlockStateProperties :: CONDITIONAL . index_of (false) , BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const FROSTED_ICE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("frosted_ice") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.5f32) . friction (0.98f32) . destroy_time (0.5f32) , & [& BlockStateProperties :: AGE_3] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_3 => 0usize)) ; pub const MAGMA_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magma_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const NETHER_WART_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_wart_block") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . destroy_time (1f32) , & [] ,) ; pub const RED_NETHER_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_nether_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BONE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bone_block") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Xylophone) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRUCTURE_VOID : & Block = & Block :: new (ResourceLocation :: vanilla_static ("structure_void") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const OBSERVER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("observer") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: South) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const WHITE_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const ORANGE_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const MAGENTA_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const LIGHT_BLUE_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const YELLOW_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const LIME_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const PINK_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const GRAY_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const LIGHT_GRAY_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const CYAN_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const PURPLE_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const BLUE_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const BROWN_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const GREEN_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const RED_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const BLACK_SHULKER_BOX : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_shulker_box") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (2f32) , & [& BlockStateProperties :: FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up))) ; pub const WHITE_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const ORANGE_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const MAGENTA_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIGHT_BLUE_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const YELLOW_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIME_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PINK_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const GRAY_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LIGHT_GRAY_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const CYAN_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const PURPLE_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BLUE_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BROWN_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const GREEN_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const RED_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BLACK_GLAZED_TERRACOTTA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_glazed_terracotta") , BlockBehaviourProperties :: new () . explosion_resistance (1.4f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: PushOnly) . destroy_time (1.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const WHITE_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const ORANGE_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const MAGENTA_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIGHT_BLUE_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const YELLOW_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIME_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PINK_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GRAY_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const LIGHT_GRAY_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CYAN_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const PURPLE_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BLUE_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BROWN_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const GREEN_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RED_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BLACK_CONCRETE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_concrete") , BlockBehaviourProperties :: new () . explosion_resistance (1.8f32) . destroy_time (1.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const WHITE_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const ORANGE_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const MAGENTA_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const LIGHT_BLUE_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const YELLOW_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const LIME_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const PINK_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const GRAY_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const LIGHT_GRAY_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const CYAN_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const PURPLE_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const BLUE_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const BROWN_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const GREEN_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const RED_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const BLACK_CONCRETE_POWDER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_concrete_powder") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [] ,) ; pub const KELP : & Block = & Block :: new (ResourceLocation :: vanilla_static ("kelp") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_25] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_25 => 0usize)) ; pub const KELP_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("kelp_plant") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const DRIED_KELP_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dried_kelp_block") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const TURTLE_EGG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("turtle_egg") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.5f32) . is_randomly_ticking (true) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: EGGS , & BlockStateProperties :: HATCH] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EGGS => 1usize , BlockStateProperties :: HATCH => 0usize)) ; pub const SNIFFER_EGG : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sniffer_egg") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [& BlockStateProperties :: HATCH] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HATCH => 0usize)) ; pub const DRIED_GHAST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dried_ghast") , BlockBehaviourProperties :: new () . can_occlude (false) . is_randomly_ticking (true) . force_solid_on (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DRIED_GHAST_HYDRATION_LEVELS , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DRIED_GHAST_HYDRATION_LEVELS => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DEAD_TUBE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_tube_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEAD_BRAIN_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_brain_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEAD_BUBBLE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_bubble_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEAD_FIRE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_fire_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEAD_HORN_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_horn_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TUBE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tube_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BRAIN_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brain_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BUBBLE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bubble_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const FIRE_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fire_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const HORN_CORAL_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("horn_coral_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEAD_TUBE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_tube_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BRAIN_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_brain_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BUBBLE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_bubble_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_FIRE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_fire_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_HORN_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_horn_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const TUBE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tube_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BRAIN_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brain_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BUBBLE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bubble_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const FIRE_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fire_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const HORN_CORAL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("horn_coral") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_TUBE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_tube_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BRAIN_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_brain_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BUBBLE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_bubble_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_FIRE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_fire_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_HORN_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_horn_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const TUBE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tube_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BRAIN_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brain_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BUBBLE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bubble_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const FIRE_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fire_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const HORN_CORAL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("horn_coral_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_TUBE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_tube_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BRAIN_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_brain_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_BUBBLE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_bubble_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_FIRE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_fire_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const DEAD_HORN_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dead_horn_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . force_solid_on (true) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const TUBE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tube_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BRAIN_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brain_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BUBBLE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bubble_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const FIRE_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fire_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const HORN_CORAL_WALL_FAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("horn_coral_wall_fan") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const SEA_PICKLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sea_pickle") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: PICKLES , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: PICKLES => 1usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BLUE_ICE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_ice") , BlockBehaviourProperties :: new () . explosion_resistance (2.8f32) . friction (0.989f32) . destroy_time (2.8f32) , & [] ,) ; pub const CONDUIT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("conduit") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (true))) ; pub const BAMBOO_SAPLING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo_sapling") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . is_randomly_ticking (true) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1f32) . ignited_by_lava (true) , & [] ,) ; pub const BAMBOO : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bamboo") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (1f32) . is_randomly_ticking (true) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (1f32) . ignited_by_lava (true) , & [& BlockStateProperties :: AGE_1 , & BlockStateProperties :: BAMBOO_LEAVES , & BlockStateProperties :: STAGE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_1 => 0usize , BlockStateProperties :: BAMBOO_LEAVES => BlockStateProperties :: BAMBOO_LEAVES . get_internal_index_const (& crate :: blocks :: properties :: BambooLeaves :: None) , BlockStateProperties :: STAGE => 0usize)) ; pub const POTTED_BAMBOO : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_bamboo") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const VOID_AIR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("void_air") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_air (true) . replaceable (true) , & [] ,) ; pub const CAVE_AIR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cave_air") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_air (true) . replaceable (true) , & [] ,) ; pub const BUBBLE_COLUMN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bubble_column") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . liquid (true) . replaceable (true) , & [& BlockStateProperties :: DRAG] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DRAG => BlockStateProperties :: DRAG . index_of (true))) ; pub const POLISHED_GRANITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_granite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_RED_SANDSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_red_sandstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MOSSY_STONE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_stone_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_DIORITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_diorite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MOSSY_COBBLESTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_cobblestone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const END_STONE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_stone_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (9f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_SANDSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_sandstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_QUARTZ_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_quartz_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const GRANITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("granite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ANDESITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("andesite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RED_NETHER_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_nether_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_ANDESITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_andesite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DIORITE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diorite_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_GRANITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_granite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_RED_SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_red_sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MOSSY_STONE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_stone_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_DIORITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_diorite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MOSSY_COBBLESTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_cobblestone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const END_STONE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_stone_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (9f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_SANDSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_sandstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMOOTH_QUARTZ_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_quartz_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const GRANITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("granite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ANDESITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("andesite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RED_NETHER_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_nether_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_ANDESITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_andesite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DIORITE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diorite_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const PRISMARINE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("prismarine_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const RED_SANDSTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_sandstone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . force_solid_on (true) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const MOSSY_STONE_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mossy_stone_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const GRANITE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("granite_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const STONE_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stone_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const MUD_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mud_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const NETHER_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const ANDESITE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("andesite_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const RED_NETHER_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_nether_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const SANDSTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sandstone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . force_solid_on (true) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const END_STONE_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("end_stone_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (9f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const DIORITE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("diorite_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const SCAFFOLDING : & Block = & Block :: new (ResourceLocation :: vanilla_static ("scaffolding") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) , & [& BlockStateProperties :: BOTTOM , & BlockStateProperties :: STABILITY_DISTANCE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BOTTOM => BlockStateProperties :: BOTTOM . index_of (false) , BlockStateProperties :: STABILITY_DISTANCE => 7usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LOOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("loom") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BARREL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("barrel") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: OPEN] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false))) ; pub const SMOKER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smoker") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const BLAST_FURNACE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blast_furnace") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const CARTOGRAPHY_TABLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cartography_table") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const FLETCHING_TABLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("fletching_table") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const GRINDSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("grindstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (2f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const LECTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lectern") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HAS_BOOK , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HAS_BOOK => BlockStateProperties :: HAS_BOOK . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const SMITHING_TABLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smithing_table") , BlockBehaviourProperties :: new () . explosion_resistance (2.5f32) . destroy_time (2.5f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const STONECUTTER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stonecutter") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North))) ; pub const BELL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bell") , BlockBehaviourProperties :: new () . explosion_resistance (5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (5f32) , & [& BlockStateProperties :: BELL_ATTACHMENT , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BELL_ATTACHMENT => BlockStateProperties :: BELL_ATTACHMENT . get_internal_index_const (& crate :: blocks :: properties :: BellAttachType :: Floor) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SOUL_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_LANTERN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_lantern") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3.5f32) , & [& BlockStateProperties :: HANGING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HANGING => BlockStateProperties :: HANGING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CAMPFIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("campfire") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT , & BlockStateProperties :: SIGNAL_FIRE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (true) , BlockStateProperties :: SIGNAL_FIRE => BlockStateProperties :: SIGNAL_FIRE . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SOUL_CAMPFIRE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("soul_campfire") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (2f32) . destroy_time (2f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LIT , & BlockStateProperties :: SIGNAL_FIRE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (true) , BlockStateProperties :: SIGNAL_FIRE => BlockStateProperties :: SIGNAL_FIRE . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SWEET_BERRY_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sweet_berry_bush") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_3] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_3 => 0usize)) ; pub const WARPED_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_stem") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_WARPED_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_warped_stem") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const WARPED_HYPHAE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_hyphae") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_WARPED_HYPHAE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_warped_hyphae") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const WARPED_NYLIUM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_nylium") , BlockBehaviourProperties :: new () . explosion_resistance (0.4f32) . is_randomly_ticking (true) . destroy_time (0.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const WARPED_FUNGUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_fungus") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const WARPED_WART_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_wart_block") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . destroy_time (1f32) , & [] ,) ; pub const WARPED_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_roots") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const NETHER_SPROUTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("nether_sprouts") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const CRIMSON_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_stem") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_CRIMSON_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_crimson_stem") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const CRIMSON_HYPHAE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_hyphae") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const STRIPPED_CRIMSON_HYPHAE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("stripped_crimson_hyphae") , BlockBehaviourProperties :: new () . explosion_resistance (2f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const CRIMSON_NYLIUM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_nylium") , BlockBehaviourProperties :: new () . explosion_resistance (0.4f32) . is_randomly_ticking (true) . destroy_time (0.4f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRIMSON_FUNGUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_fungus") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const SHROOMLIGHT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("shroomlight") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . destroy_time (1f32) , & [] ,) ; pub const WEEPING_VINES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weeping_vines") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_25] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_25 => 0usize)) ; pub const WEEPING_VINES_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weeping_vines_plant") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const TWISTING_VINES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("twisting_vines") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_25] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_25 => 0usize)) ; pub const TWISTING_VINES_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("twisting_vines_plant") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const CRIMSON_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_roots") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [] ,) ; pub const CRIMSON_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const WARPED_PLANKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_planks") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [] ,) ; pub const CRIMSON_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_slab") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WARPED_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CRIMSON_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const WARPED_FENCE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_fence") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const CRIMSON_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WARPED_FENCE_GATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_fence_gate") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . force_solid_on (true) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: IN_WALL , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: IN_WALL => BlockStateProperties :: IN_WALL . index_of (false) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CRIMSON_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (2f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WARPED_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CRIMSON_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WARPED_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const CRIMSON_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: ROTATION_16 , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ROTATION_16 => 0usize , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRIMSON_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crimson_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WARPED_WALL_SIGN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("warped_wall_sign") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (1f32) . force_solid_on (true) . destroy_time (1f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const STRUCTURE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("structure_block") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: STRUCTUREBLOCK_MODE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: STRUCTUREBLOCK_MODE => BlockStateProperties :: STRUCTUREBLOCK_MODE . get_internal_index_const (& crate :: blocks :: properties :: StructureMode :: Load))) ; pub const JIGSAW : & Block = & Block :: new (ResourceLocation :: vanilla_static ("jigsaw") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: ORIENTATION] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ORIENTATION => BlockStateProperties :: ORIENTATION . get_internal_index_const (& crate :: blocks :: properties :: FrontAndTop :: NorthUp))) ; pub const TEST_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("test_block") , BlockBehaviourProperties :: new () . explosion_resistance (3600000f32) . destroy_time (- 1f32) , & [& BlockStateProperties :: TEST_BLOCK_MODE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: TEST_BLOCK_MODE => BlockStateProperties :: TEST_BLOCK_MODE . get_internal_index_const (& crate :: blocks :: properties :: TestBlockMode :: Start))) ; pub const TEST_INSTANCE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("test_instance_block") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3600000f32) . destroy_time (- 1f32) , & [] ,) ; pub const COMPOSTER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("composter") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: LEVEL_COMPOSTER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LEVEL_COMPOSTER => 0usize)) ; pub const TARGET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("target") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [& BlockStateProperties :: POWER] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWER => 0usize)) ; pub const BEE_NEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("bee_nest") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LEVEL_HONEY] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LEVEL_HONEY => 0usize)) ; pub const BEEHIVE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("beehive") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) . ignited_by_lava (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Bass) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: LEVEL_HONEY] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: LEVEL_HONEY => 0usize)) ; pub const HONEY_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("honey_block") , BlockBehaviourProperties :: new () . can_occlude (false) . speed_factor (0.4f32) . jump_factor (0.5f32) , & [] ,) ; pub const HONEYCOMB_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("honeycomb_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.6f32) . destroy_time (0.6f32) , & [] ,) ; pub const NETHERITE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("netherite_block") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (50f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const ANCIENT_DEBRIS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("ancient_debris") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (30f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const CRYING_OBSIDIAN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crying_obsidian") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (50f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RESPAWN_ANCHOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("respawn_anchor") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (50f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: RESPAWN_ANCHOR_CHARGES] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: RESPAWN_ANCHOR_CHARGES => 0usize)) ; pub const POTTED_CRIMSON_FUNGUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_crimson_fungus") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_WARPED_FUNGUS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_warped_fungus") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_CRIMSON_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_crimson_roots") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_WARPED_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_warped_roots") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const LODESTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lodestone") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Block) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const BLACKSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blackstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const BLACKSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blackstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BLACKSTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blackstone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const BLACKSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blackstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_BLACKSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_BLACKSTONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRACKED_POLISHED_BLACKSTONE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cracked_polished_blackstone_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CHISELED_POLISHED_BLACKSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_polished_blackstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_BLACKSTONE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_BLACKSTONE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_BLACKSTONE_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const GILDED_BLACKSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gilded_blackstone") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_BLACKSTONE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_BLACKSTONE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_BLACKSTONE_PRESSURE_PLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_pressure_plate") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const POLISHED_BLACKSTONE_BUTTON : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_button") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.5f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: ATTACH_FACE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: ATTACH_FACE => BlockStateProperties :: ATTACH_FACE . get_internal_index_const (& crate :: blocks :: properties :: AttachFace :: Wall) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const POLISHED_BLACKSTONE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_blackstone_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const CHISELED_NETHER_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_nether_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRACKED_NETHER_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cracked_nether_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (2f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const QUARTZ_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("quartz_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (0.8f32) . destroy_time (0.8f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WHITE_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ORANGE_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MAGENTA_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIGHT_BLUE_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const YELLOW_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIME_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PINK_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const GRAY_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIGHT_GRAY_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CYAN_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PURPLE_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BLUE_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BROWN_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const GREEN_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const RED_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BLACK_CANDLE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_candle") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: CANDLES , & BlockStateProperties :: LIT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CANDLES => 1usize , BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const WHITE_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("white_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const ORANGE_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("orange_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const MAGENTA_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("magenta_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const LIGHT_BLUE_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_blue_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const YELLOW_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("yellow_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const LIME_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lime_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const PINK_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const GRAY_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("gray_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const LIGHT_GRAY_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("light_gray_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const CYAN_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cyan_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const PURPLE_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("purple_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const BLUE_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("blue_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const BROWN_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("brown_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const GREEN_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("green_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const RED_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("red_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const BLACK_CANDLE_CAKE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("black_candle_cake") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.5f32) , & [& BlockStateProperties :: LIT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false))) ; pub const AMETHYST_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("amethyst_block") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const BUDDING_AMETHYST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("budding_amethyst") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const AMETHYST_CLUSTER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("amethyst_cluster") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (1.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1.5f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LARGE_AMETHYST_BUD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("large_amethyst_bud") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (1.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1.5f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const MEDIUM_AMETHYST_BUD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("medium_amethyst_bud") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (1.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1.5f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMALL_AMETHYST_BUD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("small_amethyst_bud") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (1.5f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (1.5f32) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TUFF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TUFF_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TUFF_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TUFF_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const POLISHED_TUFF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_tuff") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_TUFF_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_tuff_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_TUFF_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_tuff_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_TUFF_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_tuff_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const CHISELED_TUFF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_tuff") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TUFF_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TUFF_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TUFF_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const TUFF_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tuff_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const CHISELED_TUFF_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_tuff_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CALCITE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("calcite") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (0.75f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const TINTED_GLASS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("tinted_glass") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.3f32) . destroy_time (0.3f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Hat) , & [] ,) ; pub const POWDER_SNOW : & Block = & Block :: new (ResourceLocation :: vanilla_static ("powder_snow") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (0.25f32) . dynamic_shape (true) . destroy_time (0.25f32) , & [] ,) ; pub const SCULK_SENSOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sculk_sensor") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . destroy_time (1.5f32) , & [& BlockStateProperties :: POWER , & BlockStateProperties :: SCULK_SENSOR_PHASE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: POWER => 0usize , BlockStateProperties :: SCULK_SENSOR_PHASE => BlockStateProperties :: SCULK_SENSOR_PHASE . get_internal_index_const (& crate :: blocks :: properties :: SculkSensorPhase :: Inactive) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CALIBRATED_SCULK_SENSOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("calibrated_sculk_sensor") , BlockBehaviourProperties :: new () . explosion_resistance (1.5f32) . destroy_time (1.5f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: POWER , & BlockStateProperties :: SCULK_SENSOR_PHASE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: POWER => 0usize , BlockStateProperties :: SCULK_SENSOR_PHASE => BlockStateProperties :: SCULK_SENSOR_PHASE . get_internal_index_const (& crate :: blocks :: properties :: SculkSensorPhase :: Inactive) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SCULK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sculk") , BlockBehaviourProperties :: new () . explosion_resistance (0.2f32) . destroy_time (0.2f32) , & [] ,) ; pub const SCULK_VEIN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sculk_vein") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.2f32) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.2f32) , & [& BlockStateProperties :: DOWN , & BlockStateProperties :: EAST , & BlockStateProperties :: NORTH , & BlockStateProperties :: SOUTH , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DOWN => BlockStateProperties :: DOWN . index_of (false) , BlockStateProperties :: EAST => BlockStateProperties :: EAST . index_of (false) , BlockStateProperties :: NORTH => BlockStateProperties :: NORTH . index_of (false) , BlockStateProperties :: SOUTH => BlockStateProperties :: SOUTH . index_of (false) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST => BlockStateProperties :: WEST . index_of (false))) ; pub const SCULK_CATALYST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sculk_catalyst") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) , & [& BlockStateProperties :: BLOOM] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BLOOM => BlockStateProperties :: BLOOM . index_of (false))) ; pub const SCULK_SHRIEKER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("sculk_shrieker") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) , & [& BlockStateProperties :: CAN_SUMMON , & BlockStateProperties :: SHRIEKING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CAN_SUMMON => BlockStateProperties :: CAN_SUMMON . index_of (false) , BlockStateProperties :: SHRIEKING => BlockStateProperties :: SHRIEKING . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const EXPOSED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WEATHERED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const OXIDIZED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const COPPER_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_COPPER_ORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_copper_ore") , BlockBehaviourProperties :: new () . explosion_resistance (3f32) . destroy_time (4.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const OXIDIZED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WEATHERED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const EXPOSED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const OXIDIZED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WEATHERED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const EXPOSED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_OXIDIZED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_WEATHERED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_EXPOSED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_CHISELED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_chiseled_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const OXIDIZED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_WEATHERED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_EXPOSED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_OXIDIZED_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_OXIDIZED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_WEATHERED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_EXPOSED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_CUT_COPPER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_cut_copper") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [] ,) ; pub const WAXED_OXIDIZED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_CUT_COPPER_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_cut_copper_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_CUT_COPPER_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_cut_copper_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const EXPOSED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const OXIDIZED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WEATHERED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_DOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_door") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: DOOR_HINGE , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: DOOR_HINGE => BlockStateProperties :: DOOR_HINGE . get_internal_index_const (& crate :: blocks :: properties :: DoorHingeSide :: Left) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_TRAPDOOR : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_trapdoor") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: OPEN , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: OPEN => BlockStateProperties :: OPEN . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_GRATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_grate") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const EXPOSED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WEATHERED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const OXIDIZED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_BULB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_bulb") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: LIT , & BlockStateProperties :: POWERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: LIT => BlockStateProperties :: LIT . index_of (false) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false))) ; pub const COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_CHEST : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_chest") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: CHEST_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: CHEST_TYPE => BlockStateProperties :: CHEST_TYPE . get_internal_index_const (& crate :: blocks :: properties :: ChestType :: Single) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_COPPER_GOLEM_STATUE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_copper_golem_statue") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (3f32) , & [& BlockStateProperties :: COPPER_GOLEM_POSE , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: COPPER_GOLEM_POSE => BlockStateProperties :: COPPER_GOLEM_POSE . get_internal_index_const (& crate :: blocks :: properties :: Pose :: Standing) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const EXPOSED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("exposed_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WEATHERED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("weathered_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const OXIDIZED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("oxidized_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_EXPOSED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_exposed_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_WEATHERED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_weathered_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const WAXED_OXIDIZED_LIGHTNING_ROD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("waxed_oxidized_lightning_rod") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3f32) . requires_correct_tool_for_drops (true) , & [& BlockStateProperties :: FACING , & BlockStateProperties :: POWERED , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: FACING => BlockStateProperties :: FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: POWERED => BlockStateProperties :: POWERED . index_of (false) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POINTED_DRIPSTONE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pointed_dripstone") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (3f32) . is_randomly_ticking (true) . force_solid_on (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . dynamic_shape (true) . destroy_time (1.5f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: DRIPSTONE_THICKNESS , & BlockStateProperties :: VERTICAL_DIRECTION , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: DRIPSTONE_THICKNESS => BlockStateProperties :: DRIPSTONE_THICKNESS . get_internal_index_const (& crate :: blocks :: properties :: DripstoneThickness :: Tip) , BlockStateProperties :: VERTICAL_DIRECTION => BlockStateProperties :: VERTICAL_DIRECTION . get_internal_index_const (& crate :: blocks :: properties :: Direction :: Up) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DRIPSTONE_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("dripstone_block") , BlockBehaviourProperties :: new () . explosion_resistance (1f32) . destroy_time (1.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CAVE_VINES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cave_vines") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: AGE_25 , & BlockStateProperties :: BERRIES] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AGE_25 => 0usize , BlockStateProperties :: BERRIES => BlockStateProperties :: BERRIES . index_of (false))) ; pub const CAVE_VINES_PLANT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cave_vines_plant") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: BERRIES] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BERRIES => BlockStateProperties :: BERRIES . index_of (false))) ; pub const SPORE_BLOSSOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("spore_blossom") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const AZALEA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("azalea") , BlockBehaviourProperties :: new () . can_occlude (false) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const FLOWERING_AZALEA : & Block = & Block :: new (ResourceLocation :: vanilla_static ("flowering_azalea") , BlockBehaviourProperties :: new () . can_occlude (false) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const MOSS_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("moss_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [] ,) ; pub const PINK_PETALS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pink_petals") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: FLOWER_AMOUNT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: FLOWER_AMOUNT => 1usize)) ; pub const WILDFLOWERS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("wildflowers") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: FLOWER_AMOUNT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: FLOWER_AMOUNT => 1usize)) ; pub const LEAF_LITTER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("leaf_litter") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . replaceable (true) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: SEGMENT_AMOUNT] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: SEGMENT_AMOUNT => 1usize)) ; pub const MOSS_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("moss_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [] ,) ; pub const BIG_DRIPLEAF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("big_dripleaf") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . force_solid_off (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: TILT , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: TILT => BlockStateProperties :: TILT . get_internal_index_const (& crate :: blocks :: properties :: Tilt :: None) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const BIG_DRIPLEAF_STEM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("big_dripleaf_stem") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const SMALL_DRIPLEAF : & Block = & Block :: new (ResourceLocation :: vanilla_static ("small_dripleaf") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: DOUBLE_BLOCK_HALF , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: DOUBLE_BLOCK_HALF => BlockStateProperties :: DOUBLE_BLOCK_HALF . get_internal_index_const (& crate :: blocks :: properties :: DoubleBlockHalf :: Lower) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const HANGING_ROOTS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("hanging_roots") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) . replaceable (true) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const ROOTED_DIRT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("rooted_dirt") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const MUD : & Block = & Block :: new (ResourceLocation :: vanilla_static ("mud") , BlockBehaviourProperties :: new () . explosion_resistance (0.5f32) . destroy_time (0.5f32) , & [] ,) ; pub const DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const COBBLED_DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobbled_deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const COBBLED_DEEPSLATE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobbled_deepslate_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COBBLED_DEEPSLATE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobbled_deepslate_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const COBBLED_DEEPSLATE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cobbled_deepslate_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const POLISHED_DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POLISHED_DEEPSLATE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_deepslate_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_DEEPSLATE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_deepslate_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const POLISHED_DEEPSLATE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("polished_deepslate_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const DEEPSLATE_TILES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_tiles") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_TILE_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_tile_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DEEPSLATE_TILE_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_tile_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DEEPSLATE_TILE_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_tile_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const DEEPSLATE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DEEPSLATE_BRICK_STAIRS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_brick_stairs") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: HALF , & BlockStateProperties :: STAIRS_SHAPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: HALF => BlockStateProperties :: HALF . get_internal_index_const (& crate :: blocks :: properties :: Half :: Bottom) , BlockStateProperties :: STAIRS_SHAPE => BlockStateProperties :: STAIRS_SHAPE . get_internal_index_const (& crate :: blocks :: properties :: StairsShape :: Straight) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DEEPSLATE_BRICK_SLAB : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_brick_slab") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: SLAB_TYPE , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: SLAB_TYPE => BlockStateProperties :: SLAB_TYPE . get_internal_index_const (& crate :: blocks :: properties :: SlabType :: Bottom) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const DEEPSLATE_BRICK_WALL : & Block = & Block :: new (ResourceLocation :: vanilla_static ("deepslate_brick_wall") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . force_solid_on (true) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: UP , & BlockStateProperties :: WATERLOGGED , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: UP => BlockStateProperties :: UP . index_of (true) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const CHISELED_DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("chiseled_deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRACKED_DEEPSLATE_BRICKS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cracked_deepslate_bricks") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const CRACKED_DEEPSLATE_TILES : & Block = & Block :: new (ResourceLocation :: vanilla_static ("cracked_deepslate_tiles") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (3.5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const INFESTED_DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("infested_deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (0.75f32) . destroy_time (1.5f32) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const SMOOTH_BASALT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("smooth_basalt") , BlockBehaviourProperties :: new () . explosion_resistance (4.2f32) . destroy_time (1.25f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RAW_IRON_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("raw_iron_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RAW_COPPER_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("raw_copper_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const RAW_GOLD_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("raw_gold_block") , BlockBehaviourProperties :: new () . explosion_resistance (6f32) . destroy_time (5f32) . requires_correct_tool_for_drops (true) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const POTTED_AZALEA_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_azalea_bush") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_FLOWERING_AZALEA_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_flowering_azalea_bush") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const OCHRE_FROGLIGHT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("ochre_froglight") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const VERDANT_FROGLIGHT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("verdant_froglight") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const PEARLESCENT_FROGLIGHT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pearlescent_froglight") , BlockBehaviourProperties :: new () . explosion_resistance (0.3f32) . destroy_time (0.3f32) , & [& BlockStateProperties :: AXIS] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: AXIS => BlockStateProperties :: AXIS . get_internal_index_const (& crate :: blocks :: properties :: Axis :: Y))) ; pub const FROGSPAWN : & Block = & Block :: new (ResourceLocation :: vanilla_static ("frogspawn") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const REINFORCED_DEEPSLATE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("reinforced_deepslate") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (55f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [] ,) ; pub const DECORATED_POT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("decorated_pot") , BlockBehaviourProperties :: new () . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [& BlockStateProperties :: CRACKED , & BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CRACKED => BlockStateProperties :: CRACKED . index_of (false) , BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const CRAFTER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("crafter") , BlockBehaviourProperties :: new () . explosion_resistance (3.5f32) . destroy_time (1.5f32) , & [& BlockStateProperties :: CRAFTING , & BlockStateProperties :: ORIENTATION , & BlockStateProperties :: TRIGGERED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: CRAFTING => BlockStateProperties :: CRAFTING . index_of (false) , BlockStateProperties :: ORIENTATION => BlockStateProperties :: ORIENTATION . get_internal_index_const (& crate :: blocks :: properties :: FrontAndTop :: NorthUp) , BlockStateProperties :: TRIGGERED => BlockStateProperties :: TRIGGERED . index_of (false))) ; pub const TRIAL_SPAWNER : & Block = & Block :: new (ResourceLocation :: vanilla_static ("trial_spawner") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (50f32) . destroy_time (50f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: OMINOUS , & BlockStateProperties :: TRIAL_SPAWNER_STATE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: OMINOUS => BlockStateProperties :: OMINOUS . index_of (false) , BlockStateProperties :: TRIAL_SPAWNER_STATE => BlockStateProperties :: TRIAL_SPAWNER_STATE . get_internal_index_const (& crate :: blocks :: properties :: TrialSpawnerState :: Inactive))) ; pub const VAULT : & Block = & Block :: new (ResourceLocation :: vanilla_static ("vault") , BlockBehaviourProperties :: new () . can_occlude (false) . explosion_resistance (50f32) . destroy_time (50f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Basedrum) , & [& BlockStateProperties :: HORIZONTAL_FACING , & BlockStateProperties :: OMINOUS , & BlockStateProperties :: VAULT_STATE] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: HORIZONTAL_FACING => BlockStateProperties :: HORIZONTAL_FACING . get_internal_index_const (& crate :: blocks :: properties :: Direction :: North) , BlockStateProperties :: OMINOUS => BlockStateProperties :: OMINOUS . index_of (false) , BlockStateProperties :: VAULT_STATE => BlockStateProperties :: VAULT_STATE . get_internal_index_const (& crate :: blocks :: properties :: VaultState :: Inactive))) ; pub const HEAVY_CORE : & Block = & Block :: new (ResourceLocation :: vanilla_static ("heavy_core") , BlockBehaviourProperties :: new () . explosion_resistance (1200f32) . destroy_time (10f32) . instrument (crate :: blocks :: properties :: NoteBlockInstrument :: Snare) , & [& BlockStateProperties :: WATERLOGGED] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: WATERLOGGED => BlockStateProperties :: WATERLOGGED . index_of (false))) ; pub const PALE_MOSS_BLOCK : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_moss_block") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) . ignited_by_lava (true) , & [] ,) ; pub const PALE_MOSS_CARPET : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_moss_carpet") , BlockBehaviourProperties :: new () . explosion_resistance (0.1f32) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . destroy_time (0.1f32) . ignited_by_lava (true) , & [& BlockStateProperties :: BOTTOM , & BlockStateProperties :: EAST_WALL , & BlockStateProperties :: NORTH_WALL , & BlockStateProperties :: SOUTH_WALL , & BlockStateProperties :: WEST_WALL] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: BOTTOM => BlockStateProperties :: BOTTOM . index_of (true) , BlockStateProperties :: EAST_WALL => BlockStateProperties :: EAST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: NORTH_WALL => BlockStateProperties :: NORTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: SOUTH_WALL => BlockStateProperties :: SOUTH_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None) , BlockStateProperties :: WEST_WALL => BlockStateProperties :: WEST_WALL . get_internal_index_const (& crate :: blocks :: properties :: WallSide :: None))) ; pub const PALE_HANGING_MOSS : & Block = & Block :: new (ResourceLocation :: vanilla_static ("pale_hanging_moss") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [& BlockStateProperties :: TIP] ,) . with_default_state (crate :: blocks :: blocks :: offset ! (BlockStateProperties :: TIP => BlockStateProperties :: TIP . index_of (true))) ; pub const OPEN_EYEBLOSSOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("open_eyeblossom") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const CLOSED_EYEBLOSSOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("closed_eyeblossom") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_OPEN_EYEBLOSSOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_open_eyeblossom") , BlockBehaviourProperties :: new () . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const POTTED_CLOSED_EYEBLOSSOM : & Block = & Block :: new (ResourceLocation :: vanilla_static ("potted_closed_eyeblossom") , BlockBehaviourProperties :: new () . can_occlude (false) . is_randomly_ticking (true) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) , & [] ,) ; pub const FIREFLY_BUSH : & Block = & Block :: new (ResourceLocation :: vanilla_static ("firefly_bush") , BlockBehaviourProperties :: new () . has_collision (false) . can_occlude (false) . push_reaction (crate :: blocks :: behaviour :: PushReaction :: Destroy) . ignited_by_lava (true) , & [] ,) ; pub fn register_blocks (registry : & mut BlockRegistry) { registry . register (AIR) ; registry . register (STONE) ; registry . register (GRANITE) ; registry . register (POLISHED_GRANITE) ; registry . register (DIORITE) ; registry . register (POLISHED_DIORITE) ; registry . register (ANDESITE) ; registry . register (POLISHED_ANDESITE) ; registry . register (GRASS_BLOCK) ; registry . register (DIRT) ; registry . register (COARSE_DIRT) ; registry . register (PODZOL) ; registry . register (COBBLESTONE) ; registry . register (OAK_PLANKS) ; registry . register (SPRUCE_PLANKS) ; registry . register (BIRCH_PLANKS) ; registry . register (JUNGLE_PLANKS) ; registry . register (ACACIA_PLANKS) ; registry . register (CHERRY_PLANKS) ; registry . register (DARK_OAK_PLANKS) ; registry . register (PALE_OAK_WOOD) ; registry . register (PALE_OAK_PLANKS) ; registry . register (MANGROVE_PLANKS) ; registry . register (BAMBOO_PLANKS) ; registry . register (BAMBOO_MOSAIC) ; registry . register (OAK_SAPLING) ; registry . register (SPRUCE_SAPLING) ; registry . register (BIRCH_SAPLING) ; registry . register (JUNGLE_SAPLING) ; registry . register (ACACIA_SAPLING) ; registry . register (CHERRY_SAPLING) ; registry . register (DARK_OAK_SAPLING) ; registry . register (PALE_OAK_SAPLING) ; registry . register (MANGROVE_PROPAGULE) ; registry . register (BEDROCK) ; registry . register (WATER) ; registry . register (LAVA) ; registry . register (SAND) ; registry . register (SUSPICIOUS_SAND) ; registry . register (RED_SAND) ; registry . register (GRAVEL) ; registry . register (SUSPICIOUS_GRAVEL) ; registry . register (GOLD_ORE) ; registry . register (DEEPSLATE_GOLD_ORE) ; registry . register (IRON_ORE) ; registry . register (DEEPSLATE_IRON_ORE) ; registry . register (COAL_ORE) ; registry . register (DEEPSLATE_COAL_ORE) ; registry . register (NETHER_GOLD_ORE) ; registry . register (OAK_LOG) ; registry . register (SPRUCE_LOG) ; registry . register (BIRCH_LOG) ; registry . register (JUNGLE_LOG) ; registry . register (ACACIA_LOG) ; registry . register (CHERRY_LOG) ; registry . register (DARK_OAK_LOG) ; registry . register (PALE_OAK_LOG) ; registry . register (MANGROVE_LOG) ; registry . register (MANGROVE_ROOTS) ; registry . register (MUDDY_MANGROVE_ROOTS) ; registry . register (BAMBOO_BLOCK) ; registry . register (STRIPPED_SPRUCE_LOG) ; registry . register (STRIPPED_BIRCH_LOG) ; registry . register (STRIPPED_JUNGLE_LOG) ; registry . register (STRIPPED_ACACIA_LOG) ; registry . register (STRIPPED_CHERRY_LOG) ; registry . register (STRIPPED_DARK_OAK_LOG) ; registry . register (STRIPPED_PALE_OAK_LOG) ; registry . register (STRIPPED_OAK_LOG) ; registry . register (STRIPPED_MANGROVE_LOG) ; registry . register (STRIPPED_BAMBOO_BLOCK) ; registry . register (OAK_WOOD) ; registry . register (SPRUCE_WOOD) ; registry . register (BIRCH_WOOD) ; registry . register (JUNGLE_WOOD) ; registry . register (ACACIA_WOOD) ; registry . register (CHERRY_WOOD) ; registry . register (DARK_OAK_WOOD) ; registry . register (MANGROVE_WOOD) ; registry . register (STRIPPED_OAK_WOOD) ; registry . register (STRIPPED_SPRUCE_WOOD) ; registry . register (STRIPPED_BIRCH_WOOD) ; registry . register (STRIPPED_JUNGLE_WOOD) ; registry . register (STRIPPED_ACACIA_WOOD) ; registry . register (STRIPPED_CHERRY_WOOD) ; registry . register (STRIPPED_DARK_OAK_WOOD) ; registry . register (STRIPPED_PALE_OAK_WOOD) ; registry . register (STRIPPED_MANGROVE_WOOD) ; registry . register (OAK_LEAVES) ; registry . register (SPRUCE_LEAVES) ; registry . register (BIRCH_LEAVES) ; registry . register (JUNGLE_LEAVES) ; registry . register (ACACIA_LEAVES) ; registry . register (CHERRY_LEAVES) ; registry . register (DARK_OAK_LEAVES) ; registry . register (PALE_OAK_LEAVES) ; registry . register (MANGROVE_LEAVES) ; registry . register (AZALEA_LEAVES) ; registry . register (FLOWERING_AZALEA_LEAVES) ; registry . register (SPONGE) ; registry . register (WET_SPONGE) ; registry . register (GLASS) ; registry . register (LAPIS_ORE) ; registry . register (DEEPSLATE_LAPIS_ORE) ; registry . register (LAPIS_BLOCK) ; registry . register (DISPENSER) ; registry . register (SANDSTONE) ; registry . register (CHISELED_SANDSTONE) ; registry . register (CUT_SANDSTONE) ; registry . register (NOTE_BLOCK) ; registry . register (WHITE_BED) ; registry . register (ORANGE_BED) ; registry . register (MAGENTA_BED) ; registry . register (LIGHT_BLUE_BED) ; registry . register (YELLOW_BED) ; registry . register (LIME_BED) ; registry . register (PINK_BED) ; registry . register (GRAY_BED) ; registry . register (LIGHT_GRAY_BED) ; registry . register (CYAN_BED) ; registry . register (PURPLE_BED) ; registry . register (BLUE_BED) ; registry . register (BROWN_BED) ; registry . register (GREEN_BED) ; registry . register (RED_BED) ; registry . register (BLACK_BED) ; registry . register (POWERED_RAIL) ; registry . register (DETECTOR_RAIL) ; registry . register (STICKY_PISTON) ; registry . register (COBWEB) ; registry . register (SHORT_GRASS) ; registry . register (FERN) ; registry . register (DEAD_BUSH) ; registry . register (BUSH) ; registry . register (SHORT_DRY_GRASS) ; registry . register (TALL_DRY_GRASS) ; registry . register (SEAGRASS) ; registry . register (TALL_SEAGRASS) ; registry . register (PISTON) ; registry . register (PISTON_HEAD) ; registry . register (WHITE_WOOL) ; registry . register (ORANGE_WOOL) ; registry . register (MAGENTA_WOOL) ; registry . register (LIGHT_BLUE_WOOL) ; registry . register (YELLOW_WOOL) ; registry . register (LIME_WOOL) ; registry . register (PINK_WOOL) ; registry . register (GRAY_WOOL) ; registry . register (LIGHT_GRAY_WOOL) ; registry . register (CYAN_WOOL) ; registry . register (PURPLE_WOOL) ; registry . register (BLUE_WOOL) ; registry . register (BROWN_WOOL) ; registry . register (GREEN_WOOL) ; registry . register (RED_WOOL) ; registry . register (BLACK_WOOL) ; registry . register (MOVING_PISTON) ; registry . register (DANDELION) ; registry . register (TORCHFLOWER) ; registry . register (POPPY) ; registry . register (BLUE_ORCHID) ; registry . register (ALLIUM) ; registry . register (AZURE_BLUET) ; registry . register (RED_TULIP) ; registry . register (ORANGE_TULIP) ; registry . register (WHITE_TULIP) ; registry . register (PINK_TULIP) ; registry . register (OXEYE_DAISY) ; registry . register (CORNFLOWER) ; registry . register (WITHER_ROSE) ; registry . register (LILY_OF_THE_VALLEY) ; registry . register (BROWN_MUSHROOM) ; registry . register (RED_MUSHROOM) ; registry . register (GOLD_BLOCK) ; registry . register (IRON_BLOCK) ; registry . register (BRICKS) ; registry . register (TNT) ; registry . register (BOOKSHELF) ; registry . register (CHISELED_BOOKSHELF) ; registry . register (ACACIA_SHELF) ; registry . register (BAMBOO_SHELF) ; registry . register (BIRCH_SHELF) ; registry . register (CHERRY_SHELF) ; registry . register (CRIMSON_SHELF) ; registry . register (DARK_OAK_SHELF) ; registry . register (JUNGLE_SHELF) ; registry . register (MANGROVE_SHELF) ; registry . register (OAK_SHELF) ; registry . register (PALE_OAK_SHELF) ; registry . register (SPRUCE_SHELF) ; registry . register (WARPED_SHELF) ; registry . register (MOSSY_COBBLESTONE) ; registry . register (OBSIDIAN) ; registry . register (TORCH) ; registry . register (WALL_TORCH) ; registry . register (FIRE) ; registry . register (SOUL_FIRE) ; registry . register (SPAWNER) ; registry . register (CREAKING_HEART) ; registry . register (OAK_STAIRS) ; registry . register (CHEST) ; registry . register (REDSTONE_WIRE) ; registry . register (DIAMOND_ORE) ; registry . register (DEEPSLATE_DIAMOND_ORE) ; registry . register (DIAMOND_BLOCK) ; registry . register (CRAFTING_TABLE) ; registry . register (WHEAT) ; registry . register (FARMLAND) ; registry . register (FURNACE) ; registry . register (OAK_SIGN) ; registry . register (SPRUCE_SIGN) ; registry . register (BIRCH_SIGN) ; registry . register (ACACIA_SIGN) ; registry . register (CHERRY_SIGN) ; registry . register (JUNGLE_SIGN) ; registry . register (DARK_OAK_SIGN) ; registry . register (PALE_OAK_SIGN) ; registry . register (MANGROVE_SIGN) ; registry . register (BAMBOO_SIGN) ; registry . register (OAK_DOOR) ; registry . register (LADDER) ; registry . register (RAIL) ; registry . register (COBBLESTONE_STAIRS) ; registry . register (OAK_WALL_SIGN) ; registry . register (SPRUCE_WALL_SIGN) ; registry . register (BIRCH_WALL_SIGN) ; registry . register (ACACIA_WALL_SIGN) ; registry . register (CHERRY_WALL_SIGN) ; registry . register (JUNGLE_WALL_SIGN) ; registry . register (DARK_OAK_WALL_SIGN) ; registry . register (PALE_OAK_WALL_SIGN) ; registry . register (MANGROVE_WALL_SIGN) ; registry . register (BAMBOO_WALL_SIGN) ; registry . register (OAK_HANGING_SIGN) ; registry . register (SPRUCE_HANGING_SIGN) ; registry . register (BIRCH_HANGING_SIGN) ; registry . register (ACACIA_HANGING_SIGN) ; registry . register (CHERRY_HANGING_SIGN) ; registry . register (JUNGLE_HANGING_SIGN) ; registry . register (DARK_OAK_HANGING_SIGN) ; registry . register (PALE_OAK_HANGING_SIGN) ; registry . register (CRIMSON_HANGING_SIGN) ; registry . register (WARPED_HANGING_SIGN) ; registry . register (MANGROVE_HANGING_SIGN) ; registry . register (BAMBOO_HANGING_SIGN) ; registry . register (OAK_WALL_HANGING_SIGN) ; registry . register (SPRUCE_WALL_HANGING_SIGN) ; registry . register (BIRCH_WALL_HANGING_SIGN) ; registry . register (ACACIA_WALL_HANGING_SIGN) ; registry . register (CHERRY_WALL_HANGING_SIGN) ; registry . register (JUNGLE_WALL_HANGING_SIGN) ; registry . register (DARK_OAK_WALL_HANGING_SIGN) ; registry . register (PALE_OAK_WALL_HANGING_SIGN) ; registry . register (MANGROVE_WALL_HANGING_SIGN) ; registry . register (CRIMSON_WALL_HANGING_SIGN) ; registry . register (WARPED_WALL_HANGING_SIGN) ; registry . register (BAMBOO_WALL_HANGING_SIGN) ; registry . register (LEVER) ; registry . register (STONE_PRESSURE_PLATE) ; registry . register (IRON_DOOR) ; registry . register (OAK_PRESSURE_PLATE) ; registry . register (SPRUCE_PRESSURE_PLATE) ; registry . register (BIRCH_PRESSURE_PLATE) ; registry . register (JUNGLE_PRESSURE_PLATE) ; registry . register (ACACIA_PRESSURE_PLATE) ; registry . register (CHERRY_PRESSURE_PLATE) ; registry . register (DARK_OAK_PRESSURE_PLATE) ; registry . register (PALE_OAK_PRESSURE_PLATE) ; registry . register (MANGROVE_PRESSURE_PLATE) ; registry . register (BAMBOO_PRESSURE_PLATE) ; registry . register (REDSTONE_ORE) ; registry . register (DEEPSLATE_REDSTONE_ORE) ; registry . register (REDSTONE_TORCH) ; registry . register (REDSTONE_WALL_TORCH) ; registry . register (STONE_BUTTON) ; registry . register (SNOW) ; registry . register (ICE) ; registry . register (SNOW_BLOCK) ; registry . register (CACTUS) ; registry . register (CACTUS_FLOWER) ; registry . register (CLAY) ; registry . register (SUGAR_CANE) ; registry . register (JUKEBOX) ; registry . register (OAK_FENCE) ; registry . register (NETHERRACK) ; registry . register (SOUL_SAND) ; registry . register (SOUL_SOIL) ; registry . register (BASALT) ; registry . register (POLISHED_BASALT) ; registry . register (SOUL_TORCH) ; registry . register (SOUL_WALL_TORCH) ; registry . register (COPPER_TORCH) ; registry . register (COPPER_WALL_TORCH) ; registry . register (GLOWSTONE) ; registry . register (NETHER_PORTAL) ; registry . register (CARVED_PUMPKIN) ; registry . register (JACK_O_LANTERN) ; registry . register (CAKE) ; registry . register (REPEATER) ; registry . register (WHITE_STAINED_GLASS) ; registry . register (ORANGE_STAINED_GLASS) ; registry . register (MAGENTA_STAINED_GLASS) ; registry . register (LIGHT_BLUE_STAINED_GLASS) ; registry . register (YELLOW_STAINED_GLASS) ; registry . register (LIME_STAINED_GLASS) ; registry . register (PINK_STAINED_GLASS) ; registry . register (GRAY_STAINED_GLASS) ; registry . register (LIGHT_GRAY_STAINED_GLASS) ; registry . register (CYAN_STAINED_GLASS) ; registry . register (PURPLE_STAINED_GLASS) ; registry . register (BLUE_STAINED_GLASS) ; registry . register (BROWN_STAINED_GLASS) ; registry . register (GREEN_STAINED_GLASS) ; registry . register (RED_STAINED_GLASS) ; registry . register (BLACK_STAINED_GLASS) ; registry . register (OAK_TRAPDOOR) ; registry . register (SPRUCE_TRAPDOOR) ; registry . register (BIRCH_TRAPDOOR) ; registry . register (JUNGLE_TRAPDOOR) ; registry . register (ACACIA_TRAPDOOR) ; registry . register (CHERRY_TRAPDOOR) ; registry . register (DARK_OAK_TRAPDOOR) ; registry . register (PALE_OAK_TRAPDOOR) ; registry . register (MANGROVE_TRAPDOOR) ; registry . register (BAMBOO_TRAPDOOR) ; registry . register (STONE_BRICKS) ; registry . register (MOSSY_STONE_BRICKS) ; registry . register (CRACKED_STONE_BRICKS) ; registry . register (CHISELED_STONE_BRICKS) ; registry . register (PACKED_MUD) ; registry . register (MUD_BRICKS) ; registry . register (INFESTED_STONE) ; registry . register (INFESTED_COBBLESTONE) ; registry . register (INFESTED_STONE_BRICKS) ; registry . register (INFESTED_MOSSY_STONE_BRICKS) ; registry . register (INFESTED_CRACKED_STONE_BRICKS) ; registry . register (INFESTED_CHISELED_STONE_BRICKS) ; registry . register (BROWN_MUSHROOM_BLOCK) ; registry . register (RED_MUSHROOM_BLOCK) ; registry . register (MUSHROOM_STEM) ; registry . register (IRON_BARS) ; registry . register (COPPER_BARS) ; registry . register (EXPOSED_COPPER_BARS) ; registry . register (WEATHERED_COPPER_BARS) ; registry . register (OXIDIZED_COPPER_BARS) ; registry . register (WAXED_COPPER_BARS) ; registry . register (WAXED_EXPOSED_COPPER_BARS) ; registry . register (WAXED_WEATHERED_COPPER_BARS) ; registry . register (WAXED_OXIDIZED_COPPER_BARS) ; registry . register (IRON_CHAIN) ; registry . register (COPPER_CHAIN) ; registry . register (EXPOSED_COPPER_CHAIN) ; registry . register (WEATHERED_COPPER_CHAIN) ; registry . register (OXIDIZED_COPPER_CHAIN) ; registry . register (WAXED_COPPER_CHAIN) ; registry . register (WAXED_EXPOSED_COPPER_CHAIN) ; registry . register (WAXED_WEATHERED_COPPER_CHAIN) ; registry . register (WAXED_OXIDIZED_COPPER_CHAIN) ; registry . register (GLASS_PANE) ; registry . register (PUMPKIN) ; registry . register (MELON) ; registry . register (ATTACHED_PUMPKIN_STEM) ; registry . register (ATTACHED_MELON_STEM) ; registry . register (PUMPKIN_STEM) ; registry . register (MELON_STEM) ; registry . register (VINE) ; registry . register (GLOW_LICHEN) ; registry . register (RESIN_CLUMP) ; registry . register (OAK_FENCE_GATE) ; registry . register (BRICK_STAIRS) ; registry . register (STONE_BRICK_STAIRS) ; registry . register (MUD_BRICK_STAIRS) ; registry . register (MYCELIUM) ; registry . register (LILY_PAD) ; registry . register (RESIN_BLOCK) ; registry . register (RESIN_BRICKS) ; registry . register (RESIN_BRICK_STAIRS) ; registry . register (RESIN_BRICK_SLAB) ; registry . register (RESIN_BRICK_WALL) ; registry . register (CHISELED_RESIN_BRICKS) ; registry . register (NETHER_BRICKS) ; registry . register (NETHER_BRICK_FENCE) ; registry . register (NETHER_BRICK_STAIRS) ; registry . register (NETHER_WART) ; registry . register (ENCHANTING_TABLE) ; registry . register (BREWING_STAND) ; registry . register (CAULDRON) ; registry . register (WATER_CAULDRON) ; registry . register (LAVA_CAULDRON) ; registry . register (POWDER_SNOW_CAULDRON) ; registry . register (END_PORTAL) ; registry . register (END_PORTAL_FRAME) ; registry . register (END_STONE) ; registry . register (DRAGON_EGG) ; registry . register (REDSTONE_LAMP) ; registry . register (COCOA) ; registry . register (SANDSTONE_STAIRS) ; registry . register (EMERALD_ORE) ; registry . register (DEEPSLATE_EMERALD_ORE) ; registry . register (ENDER_CHEST) ; registry . register (TRIPWIRE_HOOK) ; registry . register (TRIPWIRE) ; registry . register (EMERALD_BLOCK) ; registry . register (SPRUCE_STAIRS) ; registry . register (BIRCH_STAIRS) ; registry . register (JUNGLE_STAIRS) ; registry . register (COMMAND_BLOCK) ; registry . register (BEACON) ; registry . register (COBBLESTONE_WALL) ; registry . register (MOSSY_COBBLESTONE_WALL) ; registry . register (FLOWER_POT) ; registry . register (POTTED_TORCHFLOWER) ; registry . register (POTTED_OAK_SAPLING) ; registry . register (POTTED_SPRUCE_SAPLING) ; registry . register (POTTED_BIRCH_SAPLING) ; registry . register (POTTED_JUNGLE_SAPLING) ; registry . register (POTTED_ACACIA_SAPLING) ; registry . register (POTTED_CHERRY_SAPLING) ; registry . register (POTTED_DARK_OAK_SAPLING) ; registry . register (POTTED_PALE_OAK_SAPLING) ; registry . register (POTTED_MANGROVE_PROPAGULE) ; registry . register (POTTED_FERN) ; registry . register (POTTED_DANDELION) ; registry . register (POTTED_POPPY) ; registry . register (POTTED_BLUE_ORCHID) ; registry . register (POTTED_ALLIUM) ; registry . register (POTTED_AZURE_BLUET) ; registry . register (POTTED_RED_TULIP) ; registry . register (POTTED_ORANGE_TULIP) ; registry . register (POTTED_WHITE_TULIP) ; registry . register (POTTED_PINK_TULIP) ; registry . register (POTTED_OXEYE_DAISY) ; registry . register (POTTED_CORNFLOWER) ; registry . register (POTTED_LILY_OF_THE_VALLEY) ; registry . register (POTTED_WITHER_ROSE) ; registry . register (POTTED_RED_MUSHROOM) ; registry . register (POTTED_BROWN_MUSHROOM) ; registry . register (POTTED_DEAD_BUSH) ; registry . register (POTTED_CACTUS) ; registry . register (CARROTS) ; registry . register (POTATOES) ; registry . register (OAK_BUTTON) ; registry . register (SPRUCE_BUTTON) ; registry . register (BIRCH_BUTTON) ; registry . register (JUNGLE_BUTTON) ; registry . register (ACACIA_BUTTON) ; registry . register (CHERRY_BUTTON) ; registry . register (DARK_OAK_BUTTON) ; registry . register (PALE_OAK_BUTTON) ; registry . register (MANGROVE_BUTTON) ; registry . register (BAMBOO_BUTTON) ; registry . register (SKELETON_SKULL) ; registry . register (SKELETON_WALL_SKULL) ; registry . register (WITHER_SKELETON_SKULL) ; registry . register (WITHER_SKELETON_WALL_SKULL) ; registry . register (ZOMBIE_HEAD) ; registry . register (ZOMBIE_WALL_HEAD) ; registry . register (PLAYER_HEAD) ; registry . register (PLAYER_WALL_HEAD) ; registry . register (CREEPER_HEAD) ; registry . register (CREEPER_WALL_HEAD) ; registry . register (DRAGON_HEAD) ; registry . register (DRAGON_WALL_HEAD) ; registry . register (PIGLIN_HEAD) ; registry . register (PIGLIN_WALL_HEAD) ; registry . register (ANVIL) ; registry . register (CHIPPED_ANVIL) ; registry . register (DAMAGED_ANVIL) ; registry . register (TRAPPED_CHEST) ; registry . register (LIGHT_WEIGHTED_PRESSURE_PLATE) ; registry . register (HEAVY_WEIGHTED_PRESSURE_PLATE) ; registry . register (COMPARATOR) ; registry . register (DAYLIGHT_DETECTOR) ; registry . register (REDSTONE_BLOCK) ; registry . register (NETHER_QUARTZ_ORE) ; registry . register (HOPPER) ; registry . register (QUARTZ_BLOCK) ; registry . register (CHISELED_QUARTZ_BLOCK) ; registry . register (QUARTZ_PILLAR) ; registry . register (QUARTZ_STAIRS) ; registry . register (ACTIVATOR_RAIL) ; registry . register (DROPPER) ; registry . register (WHITE_TERRACOTTA) ; registry . register (ORANGE_TERRACOTTA) ; registry . register (MAGENTA_TERRACOTTA) ; registry . register (LIGHT_BLUE_TERRACOTTA) ; registry . register (YELLOW_TERRACOTTA) ; registry . register (LIME_TERRACOTTA) ; registry . register (PINK_TERRACOTTA) ; registry . register (GRAY_TERRACOTTA) ; registry . register (LIGHT_GRAY_TERRACOTTA) ; registry . register (CYAN_TERRACOTTA) ; registry . register (PURPLE_TERRACOTTA) ; registry . register (BLUE_TERRACOTTA) ; registry . register (BROWN_TERRACOTTA) ; registry . register (GREEN_TERRACOTTA) ; registry . register (RED_TERRACOTTA) ; registry . register (BLACK_TERRACOTTA) ; registry . register (WHITE_STAINED_GLASS_PANE) ; registry . register (ORANGE_STAINED_GLASS_PANE) ; registry . register (MAGENTA_STAINED_GLASS_PANE) ; registry . register (LIGHT_BLUE_STAINED_GLASS_PANE) ; registry . register (YELLOW_STAINED_GLASS_PANE) ; registry . register (LIME_STAINED_GLASS_PANE) ; registry . register (PINK_STAINED_GLASS_PANE) ; registry . register (GRAY_STAINED_GLASS_PANE) ; registry . register (LIGHT_GRAY_STAINED_GLASS_PANE) ; registry . register (CYAN_STAINED_GLASS_PANE) ; registry . register (PURPLE_STAINED_GLASS_PANE) ; registry . register (BLUE_STAINED_GLASS_PANE) ; registry . register (BROWN_STAINED_GLASS_PANE) ; registry . register (GREEN_STAINED_GLASS_PANE) ; registry . register (RED_STAINED_GLASS_PANE) ; registry . register (BLACK_STAINED_GLASS_PANE) ; registry . register (ACACIA_STAIRS) ; registry . register (CHERRY_STAIRS) ; registry . register (DARK_OAK_STAIRS) ; registry . register (PALE_OAK_STAIRS) ; registry . register (MANGROVE_STAIRS) ; registry . register (BAMBOO_STAIRS) ; registry . register (BAMBOO_MOSAIC_STAIRS) ; registry . register (SLIME_BLOCK) ; registry . register (BARRIER) ; registry . register (LIGHT) ; registry . register (IRON_TRAPDOOR) ; registry . register (PRISMARINE) ; registry . register (PRISMARINE_BRICKS) ; registry . register (DARK_PRISMARINE) ; registry . register (PRISMARINE_STAIRS) ; registry . register (PRISMARINE_BRICK_STAIRS) ; registry . register (DARK_PRISMARINE_STAIRS) ; registry . register (PRISMARINE_SLAB) ; registry . register (PRISMARINE_BRICK_SLAB) ; registry . register (DARK_PRISMARINE_SLAB) ; registry . register (SEA_LANTERN) ; registry . register (HAY_BLOCK) ; registry . register (WHITE_CARPET) ; registry . register (ORANGE_CARPET) ; registry . register (MAGENTA_CARPET) ; registry . register (LIGHT_BLUE_CARPET) ; registry . register (YELLOW_CARPET) ; registry . register (LIME_CARPET) ; registry . register (PINK_CARPET) ; registry . register (GRAY_CARPET) ; registry . register (LIGHT_GRAY_CARPET) ; registry . register (CYAN_CARPET) ; registry . register (PURPLE_CARPET) ; registry . register (BLUE_CARPET) ; registry . register (BROWN_CARPET) ; registry . register (GREEN_CARPET) ; registry . register (RED_CARPET) ; registry . register (BLACK_CARPET) ; registry . register (TERRACOTTA) ; registry . register (COAL_BLOCK) ; registry . register (PACKED_ICE) ; registry . register (SUNFLOWER) ; registry . register (LILAC) ; registry . register (ROSE_BUSH) ; registry . register (PEONY) ; registry . register (TALL_GRASS) ; registry . register (LARGE_FERN) ; registry . register (WHITE_BANNER) ; registry . register (ORANGE_BANNER) ; registry . register (MAGENTA_BANNER) ; registry . register (LIGHT_BLUE_BANNER) ; registry . register (YELLOW_BANNER) ; registry . register (LIME_BANNER) ; registry . register (PINK_BANNER) ; registry . register (GRAY_BANNER) ; registry . register (LIGHT_GRAY_BANNER) ; registry . register (CYAN_BANNER) ; registry . register (PURPLE_BANNER) ; registry . register (BLUE_BANNER) ; registry . register (BROWN_BANNER) ; registry . register (GREEN_BANNER) ; registry . register (RED_BANNER) ; registry . register (BLACK_BANNER) ; registry . register (WHITE_WALL_BANNER) ; registry . register (ORANGE_WALL_BANNER) ; registry . register (MAGENTA_WALL_BANNER) ; registry . register (LIGHT_BLUE_WALL_BANNER) ; registry . register (YELLOW_WALL_BANNER) ; registry . register (LIME_WALL_BANNER) ; registry . register (PINK_WALL_BANNER) ; registry . register (GRAY_WALL_BANNER) ; registry . register (LIGHT_GRAY_WALL_BANNER) ; registry . register (CYAN_WALL_BANNER) ; registry . register (PURPLE_WALL_BANNER) ; registry . register (BLUE_WALL_BANNER) ; registry . register (BROWN_WALL_BANNER) ; registry . register (GREEN_WALL_BANNER) ; registry . register (RED_WALL_BANNER) ; registry . register (BLACK_WALL_BANNER) ; registry . register (RED_SANDSTONE) ; registry . register (CHISELED_RED_SANDSTONE) ; registry . register (CUT_RED_SANDSTONE) ; registry . register (RED_SANDSTONE_STAIRS) ; registry . register (OAK_SLAB) ; registry . register (SPRUCE_SLAB) ; registry . register (BIRCH_SLAB) ; registry . register (JUNGLE_SLAB) ; registry . register (ACACIA_SLAB) ; registry . register (CHERRY_SLAB) ; registry . register (DARK_OAK_SLAB) ; registry . register (PALE_OAK_SLAB) ; registry . register (MANGROVE_SLAB) ; registry . register (BAMBOO_SLAB) ; registry . register (BAMBOO_MOSAIC_SLAB) ; registry . register (STONE_SLAB) ; registry . register (SMOOTH_STONE_SLAB) ; registry . register (SANDSTONE_SLAB) ; registry . register (CUT_SANDSTONE_SLAB) ; registry . register (PETRIFIED_OAK_SLAB) ; registry . register (COBBLESTONE_SLAB) ; registry . register (BRICK_SLAB) ; registry . register (STONE_BRICK_SLAB) ; registry . register (MUD_BRICK_SLAB) ; registry . register (NETHER_BRICK_SLAB) ; registry . register (QUARTZ_SLAB) ; registry . register (RED_SANDSTONE_SLAB) ; registry . register (CUT_RED_SANDSTONE_SLAB) ; registry . register (PURPUR_SLAB) ; registry . register (SMOOTH_STONE) ; registry . register (SMOOTH_SANDSTONE) ; registry . register (SMOOTH_QUARTZ) ; registry . register (SMOOTH_RED_SANDSTONE) ; registry . register (SPRUCE_FENCE_GATE) ; registry . register (BIRCH_FENCE_GATE) ; registry . register (JUNGLE_FENCE_GATE) ; registry . register (ACACIA_FENCE_GATE) ; registry . register (CHERRY_FENCE_GATE) ; registry . register (DARK_OAK_FENCE_GATE) ; registry . register (PALE_OAK_FENCE_GATE) ; registry . register (MANGROVE_FENCE_GATE) ; registry . register (BAMBOO_FENCE_GATE) ; registry . register (SPRUCE_FENCE) ; registry . register (BIRCH_FENCE) ; registry . register (JUNGLE_FENCE) ; registry . register (ACACIA_FENCE) ; registry . register (CHERRY_FENCE) ; registry . register (DARK_OAK_FENCE) ; registry . register (PALE_OAK_FENCE) ; registry . register (MANGROVE_FENCE) ; registry . register (BAMBOO_FENCE) ; registry . register (SPRUCE_DOOR) ; registry . register (BIRCH_DOOR) ; registry . register (JUNGLE_DOOR) ; registry . register (ACACIA_DOOR) ; registry . register (CHERRY_DOOR) ; registry . register (DARK_OAK_DOOR) ; registry . register (PALE_OAK_DOOR) ; registry . register (MANGROVE_DOOR) ; registry . register (BAMBOO_DOOR) ; registry . register (END_ROD) ; registry . register (CHORUS_PLANT) ; registry . register (CHORUS_FLOWER) ; registry . register (PURPUR_BLOCK) ; registry . register (PURPUR_PILLAR) ; registry . register (PURPUR_STAIRS) ; registry . register (END_STONE_BRICKS) ; registry . register (TORCHFLOWER_CROP) ; registry . register (PITCHER_CROP) ; registry . register (PITCHER_PLANT) ; registry . register (BEETROOTS) ; registry . register (DIRT_PATH) ; registry . register (END_GATEWAY) ; registry . register (REPEATING_COMMAND_BLOCK) ; registry . register (CHAIN_COMMAND_BLOCK) ; registry . register (FROSTED_ICE) ; registry . register (MAGMA_BLOCK) ; registry . register (NETHER_WART_BLOCK) ; registry . register (RED_NETHER_BRICKS) ; registry . register (BONE_BLOCK) ; registry . register (STRUCTURE_VOID) ; registry . register (OBSERVER) ; registry . register (SHULKER_BOX) ; registry . register (WHITE_SHULKER_BOX) ; registry . register (ORANGE_SHULKER_BOX) ; registry . register (MAGENTA_SHULKER_BOX) ; registry . register (LIGHT_BLUE_SHULKER_BOX) ; registry . register (YELLOW_SHULKER_BOX) ; registry . register (LIME_SHULKER_BOX) ; registry . register (PINK_SHULKER_BOX) ; registry . register (GRAY_SHULKER_BOX) ; registry . register (LIGHT_GRAY_SHULKER_BOX) ; registry . register (CYAN_SHULKER_BOX) ; registry . register (PURPLE_SHULKER_BOX) ; registry . register (BLUE_SHULKER_BOX) ; registry . register (BROWN_SHULKER_BOX) ; registry . register (GREEN_SHULKER_BOX) ; registry . register (RED_SHULKER_BOX) ; registry . register (BLACK_SHULKER_BOX) ; registry . register (WHITE_GLAZED_TERRACOTTA) ; registry . register (ORANGE_GLAZED_TERRACOTTA) ; registry . register (MAGENTA_GLAZED_TERRACOTTA) ; registry . register (LIGHT_BLUE_GLAZED_TERRACOTTA) ; registry . register (YELLOW_GLAZED_TERRACOTTA) ; registry . register (LIME_GLAZED_TERRACOTTA) ; registry . register (PINK_GLAZED_TERRACOTTA) ; registry . register (GRAY_GLAZED_TERRACOTTA) ; registry . register (LIGHT_GRAY_GLAZED_TERRACOTTA) ; registry . register (CYAN_GLAZED_TERRACOTTA) ; registry . register (PURPLE_GLAZED_TERRACOTTA) ; registry . register (BLUE_GLAZED_TERRACOTTA) ; registry . register (BROWN_GLAZED_TERRACOTTA) ; registry . register (GREEN_GLAZED_TERRACOTTA) ; registry . register (RED_GLAZED_TERRACOTTA) ; registry . register (BLACK_GLAZED_TERRACOTTA) ; registry . register (WHITE_CONCRETE) ; registry . register (ORANGE_CONCRETE) ; registry . register (MAGENTA_CONCRETE) ; registry . register (LIGHT_BLUE_CONCRETE) ; registry . register (YELLOW_CONCRETE) ; registry . register (LIME_CONCRETE) ; registry . register (PINK_CONCRETE) ; registry . register (GRAY_CONCRETE) ; registry . register (LIGHT_GRAY_CONCRETE) ; registry . register (CYAN_CONCRETE) ; registry . register (PURPLE_CONCRETE) ; registry . register (BLUE_CONCRETE) ; registry . register (BROWN_CONCRETE) ; registry . register (GREEN_CONCRETE) ; registry . register (RED_CONCRETE) ; registry . register (BLACK_CONCRETE) ; registry . register (WHITE_CONCRETE_POWDER) ; registry . register (ORANGE_CONCRETE_POWDER) ; registry . register (MAGENTA_CONCRETE_POWDER) ; registry . register (LIGHT_BLUE_CONCRETE_POWDER) ; registry . register (YELLOW_CONCRETE_POWDER) ; registry . register (LIME_CONCRETE_POWDER) ; registry . register (PINK_CONCRETE_POWDER) ; registry . register (GRAY_CONCRETE_POWDER) ; registry . register (LIGHT_GRAY_CONCRETE_POWDER) ; registry . register (CYAN_CONCRETE_POWDER) ; registry . register (PURPLE_CONCRETE_POWDER) ; registry . register (BLUE_CONCRETE_POWDER) ; registry . register (BROWN_CONCRETE_POWDER) ; registry . register (GREEN_CONCRETE_POWDER) ; registry . register (RED_CONCRETE_POWDER) ; registry . register (BLACK_CONCRETE_POWDER) ; registry . register (KELP) ; registry . register (KELP_PLANT) ; registry . register (DRIED_KELP_BLOCK) ; registry . register (TURTLE_EGG) ; registry . register (SNIFFER_EGG) ; registry . register (DRIED_GHAST) ; registry . register (DEAD_TUBE_CORAL_BLOCK) ; registry . register (DEAD_BRAIN_CORAL_BLOCK) ; registry . register (DEAD_BUBBLE_CORAL_BLOCK) ; registry . register (DEAD_FIRE_CORAL_BLOCK) ; registry . register (DEAD_HORN_CORAL_BLOCK) ; registry . register (TUBE_CORAL_BLOCK) ; registry . register (BRAIN_CORAL_BLOCK) ; registry . register (BUBBLE_CORAL_BLOCK) ; registry . register (FIRE_CORAL_BLOCK) ; registry . register (HORN_CORAL_BLOCK) ; registry . register (DEAD_TUBE_CORAL) ; registry . register (DEAD_BRAIN_CORAL) ; registry . register (DEAD_BUBBLE_CORAL) ; registry . register (DEAD_FIRE_CORAL) ; registry . register (DEAD_HORN_CORAL) ; registry . register (TUBE_CORAL) ; registry . register (BRAIN_CORAL) ; registry . register (BUBBLE_CORAL) ; registry . register (FIRE_CORAL) ; registry . register (HORN_CORAL) ; registry . register (DEAD_TUBE_CORAL_FAN) ; registry . register (DEAD_BRAIN_CORAL_FAN) ; registry . register (DEAD_BUBBLE_CORAL_FAN) ; registry . register (DEAD_FIRE_CORAL_FAN) ; registry . register (DEAD_HORN_CORAL_FAN) ; registry . register (TUBE_CORAL_FAN) ; registry . register (BRAIN_CORAL_FAN) ; registry . register (BUBBLE_CORAL_FAN) ; registry . register (FIRE_CORAL_FAN) ; registry . register (HORN_CORAL_FAN) ; registry . register (DEAD_TUBE_CORAL_WALL_FAN) ; registry . register (DEAD_BRAIN_CORAL_WALL_FAN) ; registry . register (DEAD_BUBBLE_CORAL_WALL_FAN) ; registry . register (DEAD_FIRE_CORAL_WALL_FAN) ; registry . register (DEAD_HORN_CORAL_WALL_FAN) ; registry . register (TUBE_CORAL_WALL_FAN) ; registry . register (BRAIN_CORAL_WALL_FAN) ; registry . register (BUBBLE_CORAL_WALL_FAN) ; registry . register (FIRE_CORAL_WALL_FAN) ; registry . register (HORN_CORAL_WALL_FAN) ; registry . register (SEA_PICKLE) ; registry . register (BLUE_ICE) ; registry . register (CONDUIT) ; registry . register (BAMBOO_SAPLING) ; registry . register (BAMBOO) ; registry . register (POTTED_BAMBOO) ; registry . register (VOID_AIR) ; registry . register (CAVE_AIR) ; registry . register (BUBBLE_COLUMN) ; registry . register (POLISHED_GRANITE_STAIRS) ; registry . register (SMOOTH_RED_SANDSTONE_STAIRS) ; registry . register (MOSSY_STONE_BRICK_STAIRS) ; registry . register (POLISHED_DIORITE_STAIRS) ; registry . register (MOSSY_COBBLESTONE_STAIRS) ; registry . register (END_STONE_BRICK_STAIRS) ; registry . register (STONE_STAIRS) ; registry . register (SMOOTH_SANDSTONE_STAIRS) ; registry . register (SMOOTH_QUARTZ_STAIRS) ; registry . register (GRANITE_STAIRS) ; registry . register (ANDESITE_STAIRS) ; registry . register (RED_NETHER_BRICK_STAIRS) ; registry . register (POLISHED_ANDESITE_STAIRS) ; registry . register (DIORITE_STAIRS) ; registry . register (POLISHED_GRANITE_SLAB) ; registry . register (SMOOTH_RED_SANDSTONE_SLAB) ; registry . register (MOSSY_STONE_BRICK_SLAB) ; registry . register (POLISHED_DIORITE_SLAB) ; registry . register (MOSSY_COBBLESTONE_SLAB) ; registry . register (END_STONE_BRICK_SLAB) ; registry . register (SMOOTH_SANDSTONE_SLAB) ; registry . register (SMOOTH_QUARTZ_SLAB) ; registry . register (GRANITE_SLAB) ; registry . register (ANDESITE_SLAB) ; registry . register (RED_NETHER_BRICK_SLAB) ; registry . register (POLISHED_ANDESITE_SLAB) ; registry . register (DIORITE_SLAB) ; registry . register (BRICK_WALL) ; registry . register (PRISMARINE_WALL) ; registry . register (RED_SANDSTONE_WALL) ; registry . register (MOSSY_STONE_BRICK_WALL) ; registry . register (GRANITE_WALL) ; registry . register (STONE_BRICK_WALL) ; registry . register (MUD_BRICK_WALL) ; registry . register (NETHER_BRICK_WALL) ; registry . register (ANDESITE_WALL) ; registry . register (RED_NETHER_BRICK_WALL) ; registry . register (SANDSTONE_WALL) ; registry . register (END_STONE_BRICK_WALL) ; registry . register (DIORITE_WALL) ; registry . register (SCAFFOLDING) ; registry . register (LOOM) ; registry . register (BARREL) ; registry . register (SMOKER) ; registry . register (BLAST_FURNACE) ; registry . register (CARTOGRAPHY_TABLE) ; registry . register (FLETCHING_TABLE) ; registry . register (GRINDSTONE) ; registry . register (LECTERN) ; registry . register (SMITHING_TABLE) ; registry . register (STONECUTTER) ; registry . register (BELL) ; registry . register (LANTERN) ; registry . register (SOUL_LANTERN) ; registry . register (COPPER_LANTERN) ; registry . register (EXPOSED_COPPER_LANTERN) ; registry . register (WEATHERED_COPPER_LANTERN) ; registry . register (OXIDIZED_COPPER_LANTERN) ; registry . register (WAXED_COPPER_LANTERN) ; registry . register (WAXED_EXPOSED_COPPER_LANTERN) ; registry . register (WAXED_WEATHERED_COPPER_LANTERN) ; registry . register (WAXED_OXIDIZED_COPPER_LANTERN) ; registry . register (CAMPFIRE) ; registry . register (SOUL_CAMPFIRE) ; registry . register (SWEET_BERRY_BUSH) ; registry . register (WARPED_STEM) ; registry . register (STRIPPED_WARPED_STEM) ; registry . register (WARPED_HYPHAE) ; registry . register (STRIPPED_WARPED_HYPHAE) ; registry . register (WARPED_NYLIUM) ; registry . register (WARPED_FUNGUS) ; registry . register (WARPED_WART_BLOCK) ; registry . register (WARPED_ROOTS) ; registry . register (NETHER_SPROUTS) ; registry . register (CRIMSON_STEM) ; registry . register (STRIPPED_CRIMSON_STEM) ; registry . register (CRIMSON_HYPHAE) ; registry . register (STRIPPED_CRIMSON_HYPHAE) ; registry . register (CRIMSON_NYLIUM) ; registry . register (CRIMSON_FUNGUS) ; registry . register (SHROOMLIGHT) ; registry . register (WEEPING_VINES) ; registry . register (WEEPING_VINES_PLANT) ; registry . register (TWISTING_VINES) ; registry . register (TWISTING_VINES_PLANT) ; registry . register (CRIMSON_ROOTS) ; registry . register (CRIMSON_PLANKS) ; registry . register (WARPED_PLANKS) ; registry . register (CRIMSON_SLAB) ; registry . register (WARPED_SLAB) ; registry . register (CRIMSON_PRESSURE_PLATE) ; registry . register (WARPED_PRESSURE_PLATE) ; registry . register (CRIMSON_FENCE) ; registry . register (WARPED_FENCE) ; registry . register (CRIMSON_TRAPDOOR) ; registry . register (WARPED_TRAPDOOR) ; registry . register (CRIMSON_FENCE_GATE) ; registry . register (WARPED_FENCE_GATE) ; registry . register (CRIMSON_STAIRS) ; registry . register (WARPED_STAIRS) ; registry . register (CRIMSON_BUTTON) ; registry . register (WARPED_BUTTON) ; registry . register (CRIMSON_DOOR) ; registry . register (WARPED_DOOR) ; registry . register (CRIMSON_SIGN) ; registry . register (WARPED_SIGN) ; registry . register (CRIMSON_WALL_SIGN) ; registry . register (WARPED_WALL_SIGN) ; registry . register (STRUCTURE_BLOCK) ; registry . register (JIGSAW) ; registry . register (TEST_BLOCK) ; registry . register (TEST_INSTANCE_BLOCK) ; registry . register (COMPOSTER) ; registry . register (TARGET) ; registry . register (BEE_NEST) ; registry . register (BEEHIVE) ; registry . register (HONEY_BLOCK) ; registry . register (HONEYCOMB_BLOCK) ; registry . register (NETHERITE_BLOCK) ; registry . register (ANCIENT_DEBRIS) ; registry . register (CRYING_OBSIDIAN) ; registry . register (RESPAWN_ANCHOR) ; registry . register (POTTED_CRIMSON_FUNGUS) ; registry . register (POTTED_WARPED_FUNGUS) ; registry . register (POTTED_CRIMSON_ROOTS) ; registry . register (POTTED_WARPED_ROOTS) ; registry . register (LODESTONE) ; registry . register (BLACKSTONE) ; registry . register (BLACKSTONE_STAIRS) ; registry . register (BLACKSTONE_WALL) ; registry . register (BLACKSTONE_SLAB) ; registry . register (POLISHED_BLACKSTONE) ; registry . register (POLISHED_BLACKSTONE_BRICKS) ; registry . register (CRACKED_POLISHED_BLACKSTONE_BRICKS) ; registry . register (CHISELED_POLISHED_BLACKSTONE) ; registry . register (POLISHED_BLACKSTONE_BRICK_SLAB) ; registry . register (POLISHED_BLACKSTONE_BRICK_STAIRS) ; registry . register (POLISHED_BLACKSTONE_BRICK_WALL) ; registry . register (GILDED_BLACKSTONE) ; registry . register (POLISHED_BLACKSTONE_STAIRS) ; registry . register (POLISHED_BLACKSTONE_SLAB) ; registry . register (POLISHED_BLACKSTONE_PRESSURE_PLATE) ; registry . register (POLISHED_BLACKSTONE_BUTTON) ; registry . register (POLISHED_BLACKSTONE_WALL) ; registry . register (CHISELED_NETHER_BRICKS) ; registry . register (CRACKED_NETHER_BRICKS) ; registry . register (QUARTZ_BRICKS) ; registry . register (CANDLE) ; registry . register (WHITE_CANDLE) ; registry . register (ORANGE_CANDLE) ; registry . register (MAGENTA_CANDLE) ; registry . register (LIGHT_BLUE_CANDLE) ; registry . register (YELLOW_CANDLE) ; registry . register (LIME_CANDLE) ; registry . register (PINK_CANDLE) ; registry . register (GRAY_CANDLE) ; registry . register (LIGHT_GRAY_CANDLE) ; registry . register (CYAN_CANDLE) ; registry . register (PURPLE_CANDLE) ; registry . register (BLUE_CANDLE) ; registry . register (BROWN_CANDLE) ; registry . register (GREEN_CANDLE) ; registry . register (RED_CANDLE) ; registry . register (BLACK_CANDLE) ; registry . register (CANDLE_CAKE) ; registry . register (WHITE_CANDLE_CAKE) ; registry . register (ORANGE_CANDLE_CAKE) ; registry . register (MAGENTA_CANDLE_CAKE) ; registry . register (LIGHT_BLUE_CANDLE_CAKE) ; registry . register (YELLOW_CANDLE_CAKE) ; registry . register (LIME_CANDLE_CAKE) ; registry . register (PINK_CANDLE_CAKE) ; registry . register (GRAY_CANDLE_CAKE) ; registry . register (LIGHT_GRAY_CANDLE_CAKE) ; registry . register (CYAN_CANDLE_CAKE) ; registry . register (PURPLE_CANDLE_CAKE) ; registry . register (BLUE_CANDLE_CAKE) ; registry . register (BROWN_CANDLE_CAKE) ; registry . register (GREEN_CANDLE_CAKE) ; registry . register (RED_CANDLE_CAKE) ; registry . register (BLACK_CANDLE_CAKE) ; registry . register (AMETHYST_BLOCK) ; registry . register (BUDDING_AMETHYST) ; registry . register (AMETHYST_CLUSTER) ; registry . register (LARGE_AMETHYST_BUD) ; registry . register (MEDIUM_AMETHYST_BUD) ; registry . register (SMALL_AMETHYST_BUD) ; registry . register (TUFF) ; registry . register (TUFF_SLAB) ; registry . register (TUFF_STAIRS) ; registry . register (TUFF_WALL) ; registry . register (POLISHED_TUFF) ; registry . register (POLISHED_TUFF_SLAB) ; registry . register (POLISHED_TUFF_STAIRS) ; registry . register (POLISHED_TUFF_WALL) ; registry . register (CHISELED_TUFF) ; registry . register (TUFF_BRICKS) ; registry . register (TUFF_BRICK_SLAB) ; registry . register (TUFF_BRICK_STAIRS) ; registry . register (TUFF_BRICK_WALL) ; registry . register (CHISELED_TUFF_BRICKS) ; registry . register (CALCITE) ; registry . register (TINTED_GLASS) ; registry . register (POWDER_SNOW) ; registry . register (SCULK_SENSOR) ; registry . register (CALIBRATED_SCULK_SENSOR) ; registry . register (SCULK) ; registry . register (SCULK_VEIN) ; registry . register (SCULK_CATALYST) ; registry . register (SCULK_SHRIEKER) ; registry . register (COPPER_BLOCK) ; registry . register (EXPOSED_COPPER) ; registry . register (WEATHERED_COPPER) ; registry . register (OXIDIZED_COPPER) ; registry . register (COPPER_ORE) ; registry . register (DEEPSLATE_COPPER_ORE) ; registry . register (OXIDIZED_CUT_COPPER) ; registry . register (WEATHERED_CUT_COPPER) ; registry . register (EXPOSED_CUT_COPPER) ; registry . register (CUT_COPPER) ; registry . register (OXIDIZED_CHISELED_COPPER) ; registry . register (WEATHERED_CHISELED_COPPER) ; registry . register (EXPOSED_CHISELED_COPPER) ; registry . register (CHISELED_COPPER) ; registry . register (WAXED_OXIDIZED_CHISELED_COPPER) ; registry . register (WAXED_WEATHERED_CHISELED_COPPER) ; registry . register (WAXED_EXPOSED_CHISELED_COPPER) ; registry . register (WAXED_CHISELED_COPPER) ; registry . register (OXIDIZED_CUT_COPPER_STAIRS) ; registry . register (WEATHERED_CUT_COPPER_STAIRS) ; registry . register (EXPOSED_CUT_COPPER_STAIRS) ; registry . register (CUT_COPPER_STAIRS) ; registry . register (OXIDIZED_CUT_COPPER_SLAB) ; registry . register (WEATHERED_CUT_COPPER_SLAB) ; registry . register (EXPOSED_CUT_COPPER_SLAB) ; registry . register (CUT_COPPER_SLAB) ; registry . register (WAXED_COPPER_BLOCK) ; registry . register (WAXED_WEATHERED_COPPER) ; registry . register (WAXED_EXPOSED_COPPER) ; registry . register (WAXED_OXIDIZED_COPPER) ; registry . register (WAXED_OXIDIZED_CUT_COPPER) ; registry . register (WAXED_WEATHERED_CUT_COPPER) ; registry . register (WAXED_EXPOSED_CUT_COPPER) ; registry . register (WAXED_CUT_COPPER) ; registry . register (WAXED_OXIDIZED_CUT_COPPER_STAIRS) ; registry . register (WAXED_WEATHERED_CUT_COPPER_STAIRS) ; registry . register (WAXED_EXPOSED_CUT_COPPER_STAIRS) ; registry . register (WAXED_CUT_COPPER_STAIRS) ; registry . register (WAXED_OXIDIZED_CUT_COPPER_SLAB) ; registry . register (WAXED_WEATHERED_CUT_COPPER_SLAB) ; registry . register (WAXED_EXPOSED_CUT_COPPER_SLAB) ; registry . register (WAXED_CUT_COPPER_SLAB) ; registry . register (COPPER_DOOR) ; registry . register (EXPOSED_COPPER_DOOR) ; registry . register (OXIDIZED_COPPER_DOOR) ; registry . register (WEATHERED_COPPER_DOOR) ; registry . register (WAXED_COPPER_DOOR) ; registry . register (WAXED_EXPOSED_COPPER_DOOR) ; registry . register (WAXED_OXIDIZED_COPPER_DOOR) ; registry . register (WAXED_WEATHERED_COPPER_DOOR) ; registry . register (COPPER_TRAPDOOR) ; registry . register (EXPOSED_COPPER_TRAPDOOR) ; registry . register (OXIDIZED_COPPER_TRAPDOOR) ; registry . register (WEATHERED_COPPER_TRAPDOOR) ; registry . register (WAXED_COPPER_TRAPDOOR) ; registry . register (WAXED_EXPOSED_COPPER_TRAPDOOR) ; registry . register (WAXED_OXIDIZED_COPPER_TRAPDOOR) ; registry . register (WAXED_WEATHERED_COPPER_TRAPDOOR) ; registry . register (COPPER_GRATE) ; registry . register (EXPOSED_COPPER_GRATE) ; registry . register (WEATHERED_COPPER_GRATE) ; registry . register (OXIDIZED_COPPER_GRATE) ; registry . register (WAXED_COPPER_GRATE) ; registry . register (WAXED_EXPOSED_COPPER_GRATE) ; registry . register (WAXED_WEATHERED_COPPER_GRATE) ; registry . register (WAXED_OXIDIZED_COPPER_GRATE) ; registry . register (COPPER_BULB) ; registry . register (EXPOSED_COPPER_BULB) ; registry . register (WEATHERED_COPPER_BULB) ; registry . register (OXIDIZED_COPPER_BULB) ; registry . register (WAXED_COPPER_BULB) ; registry . register (WAXED_EXPOSED_COPPER_BULB) ; registry . register (WAXED_WEATHERED_COPPER_BULB) ; registry . register (WAXED_OXIDIZED_COPPER_BULB) ; registry . register (COPPER_CHEST) ; registry . register (EXPOSED_COPPER_CHEST) ; registry . register (WEATHERED_COPPER_CHEST) ; registry . register (OXIDIZED_COPPER_CHEST) ; registry . register (WAXED_COPPER_CHEST) ; registry . register (WAXED_EXPOSED_COPPER_CHEST) ; registry . register (WAXED_WEATHERED_COPPER_CHEST) ; registry . register (WAXED_OXIDIZED_COPPER_CHEST) ; registry . register (COPPER_GOLEM_STATUE) ; registry . register (EXPOSED_COPPER_GOLEM_STATUE) ; registry . register (WEATHERED_COPPER_GOLEM_STATUE) ; registry . register (OXIDIZED_COPPER_GOLEM_STATUE) ; registry . register (WAXED_COPPER_GOLEM_STATUE) ; registry . register (WAXED_EXPOSED_COPPER_GOLEM_STATUE) ; registry . register (WAXED_WEATHERED_COPPER_GOLEM_STATUE) ; registry . register (WAXED_OXIDIZED_COPPER_GOLEM_STATUE) ; registry . register (LIGHTNING_ROD) ; registry . register (EXPOSED_LIGHTNING_ROD) ; registry . register (WEATHERED_LIGHTNING_ROD) ; registry . register (OXIDIZED_LIGHTNING_ROD) ; registry . register (WAXED_LIGHTNING_ROD) ; registry . register (WAXED_EXPOSED_LIGHTNING_ROD) ; registry . register (WAXED_WEATHERED_LIGHTNING_ROD) ; registry . register (WAXED_OXIDIZED_LIGHTNING_ROD) ; registry . register (POINTED_DRIPSTONE) ; registry . register (DRIPSTONE_BLOCK) ; registry . register (CAVE_VINES) ; registry . register (CAVE_VINES_PLANT) ; registry . register (SPORE_BLOSSOM) ; registry . register (AZALEA) ; registry . register (FLOWERING_AZALEA) ; registry . register (MOSS_CARPET) ; registry . register (PINK_PETALS) ; registry . register (WILDFLOWERS) ; registry . register (LEAF_LITTER) ; registry . register (MOSS_BLOCK) ; registry . register (BIG_DRIPLEAF) ; registry . register (BIG_DRIPLEAF_STEM) ; registry . register (SMALL_DRIPLEAF) ; registry . register (HANGING_ROOTS) ; registry . register (ROOTED_DIRT) ; registry . register (MUD) ; registry . register (DEEPSLATE) ; registry . register (COBBLED_DEEPSLATE) ; registry . register (COBBLED_DEEPSLATE_STAIRS) ; registry . register (COBBLED_DEEPSLATE_SLAB) ; registry . register (COBBLED_DEEPSLATE_WALL) ; registry . register (POLISHED_DEEPSLATE) ; registry . register (POLISHED_DEEPSLATE_STAIRS) ; registry . register (POLISHED_DEEPSLATE_SLAB) ; registry . register (POLISHED_DEEPSLATE_WALL) ; registry . register (DEEPSLATE_TILES) ; registry . register (DEEPSLATE_TILE_STAIRS) ; registry . register (DEEPSLATE_TILE_SLAB) ; registry . register (DEEPSLATE_TILE_WALL) ; registry . register (DEEPSLATE_BRICKS) ; registry . register (DEEPSLATE_BRICK_STAIRS) ; registry . register (DEEPSLATE_BRICK_SLAB) ; registry . register (DEEPSLATE_BRICK_WALL) ; registry . register (CHISELED_DEEPSLATE) ; registry . register (CRACKED_DEEPSLATE_BRICKS) ; registry . register (CRACKED_DEEPSLATE_TILES) ; registry . register (INFESTED_DEEPSLATE) ; registry . register (SMOOTH_BASALT) ; registry . register (RAW_IRON_BLOCK) ; registry . register (RAW_COPPER_BLOCK) ; registry . register (RAW_GOLD_BLOCK) ; registry . register (POTTED_AZALEA_BUSH) ; registry . register (POTTED_FLOWERING_AZALEA_BUSH) ; registry . register (OCHRE_FROGLIGHT) ; registry . register (VERDANT_FROGLIGHT) ; registry . register (PEARLESCENT_FROGLIGHT) ; registry . register (FROGSPAWN) ; registry . register (REINFORCED_DEEPSLATE) ; registry . register (DECORATED_POT) ; registry . register (CRAFTER) ; registry . register (TRIAL_SPAWNER) ; registry . register (VAULT) ; registry . register (HEAVY_CORE) ; registry . register (PALE_MOSS_BLOCK) ; registry . register (PALE_MOSS_CARPET) ; registry . register (PALE_HANGING_MOSS) ; registry . register (OPEN_EYEBLOSSOM) ; registry . register (CLOSED_EYEBLOSSOM) ; registry . register (POTTED_OPEN_EYEBLOSSOM) ; registry . register (POTTED_CLOSED_EYEBLOSSOM) ; registry . register (FIREFLY_BUSH) ; }